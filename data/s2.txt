Solution</h2>
Intuition</strong></p>
Keep track of the carry using a variable and simulate digits-by-digits sum starting from the head of list, which contains the least-significant digit.</p>
<img alt="Illustration of Adding two numbers" src="https://leetcode.com/media/documents/2_add_two_numbers.svg" width="539px"></p>
Figure 1. Visualization of the addition of two numbers: <span class="maths katex-rendered">3</mn>4</mn>2</mn>+</mo>4</mn>6</mn>5</mn>=</mo>8</mn>0</mn>7</mn></mrow><annotation encoding="application/x-tex">342 + 465 = 807</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.72777em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">3</span><span class="mord mathrm">4</span><span class="mord mathrm">2</span>+</span><span class="mord mathrm">4</span><span class="mord mathrm">6</span><span class="mord mathrm">5</span>=</span><span class="mord mathrm">8</span><span class="mord mathrm">0</span><span class="mord mathrm">7</span></span></span></span></span>.
Each node contains a single digit and the digits are stored in reverse order.</em></p>
Algorithm</strong></p>
Just like how you would sum two numbers on a piece of paper, we begin by summing the least-significant digits, which is the head of <span class="maths katex-rendered">l</mi>1</mn></mrow><annotation encoding="application/x-tex">l1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">1</span></span></span></span></span> and <span class="maths katex-rendered">l</mi>2</mn></mrow><annotation encoding="application/x-tex">l2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">2</span></span></span></span></span>. Since each digit is in the range of <span class="maths katex-rendered">0</mn>…</mo>9</mn></mrow><annotation encoding="application/x-tex">0 ldots 9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">0</span>…</span><span class="mord mathrm">9</span></span></span></span></span>, summing two digits may "overflow". For example <span class="maths katex-rendered">5</mn>+</mo>7</mn>=</mo>1</mn>2</mn></mrow><annotation encoding="application/x-tex">5 + 7 = 12</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.72777em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">5</span>+</span><span class="mord mathrm">7</span>=</span><span class="mord mathrm">1</span><span class="mord mathrm">2</span></span></span></span></span>. In this case, we set the current digit to <span class="maths katex-rendered">2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">2</span></span></span></span></span> and bring over the <span class="maths katex-rendered">c</mi>a</mi>r</mi>r</mi>y</mi>=</mo>1</mn></mrow><annotation encoding="application/x-tex">carry = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.83888em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit" style="margin-right: 0.03588em;">y</span>=</span><span class="mord mathrm">1</span></span></span></span></span> to the next iteration. <span class="maths katex-rendered">c</mi>a</mi>r</mi>r</mi>y</mi></mrow><annotation encoding="application/x-tex">carry</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit" style="margin-right: 0.03588em;">y</span></span></span></span></span> must be either <span class="maths katex-rendered">0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">0</span></span></span></span></span> or <span class="maths katex-rendered">1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span></span></span></span></span> because the largest possible sum of two digits (including the carry) is <span class="maths katex-rendered">9</mn>+</mo>9</mn>+</mo>1</mn>=</mo>1</mn>9</mn></mrow><annotation encoding="application/x-tex">9 + 9 + 1 = 19</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.72777em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">9</span>+</span><span class="mord mathrm">9</span>+</span><span class="mord mathrm">1</span>=</span><span class="mord mathrm">1</span><span class="mord mathrm">9</span></span></span></span></span>.</p>
The pseudocode is as following:</p>

Initialize current node to dummy head of the returning list.</li>
Initialize carry to <span class="maths katex-rendered">0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">0</span></span></span></span></span>.</li>
Initialize <span class="maths katex-rendered">p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">p</span></span></span></span></span> and <span class="maths katex-rendered">q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">q</span></span></span></span></span> to head of <span class="maths katex-rendered">l</mi>1</mn></mrow><annotation encoding="application/x-tex">l1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">1</span></span></span></span></span> and <span class="maths katex-rendered">l</mi>2</mn></mrow><annotation encoding="application/x-tex">l2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">2</span></span></span></span></span> respectively.</li>
Loop through lists <span class="maths katex-rendered">l</mi>1</mn></mrow><annotation encoding="application/x-tex">l1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">1</span></span></span></span></span> and <span class="maths katex-rendered">l</mi>2</mn></mrow><annotation encoding="application/x-tex">l2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">2</span></span></span></span></span> until you reach both ends.
Set <span class="maths katex-rendered">x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span></span></span></span></span> to node <span class="maths katex-rendered">p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">p</span></span></span></span></span>'s value. If <span class="maths katex-rendered">p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">p</span></span></span></span></span> has reached the end of <span class="maths katex-rendered">l</mi>1</mn></mrow><annotation encoding="application/x-tex">l1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">1</span></span></span></span></span>, set to <span class="maths katex-rendered">0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">0</span></span></span></span></span>.</li>
Set <span class="maths katex-rendered">y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">y</span></span></span></span></span> to node <span class="maths katex-rendered">q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">q</span></span></span></span></span>'s value. If <span class="maths katex-rendered">q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">q</span></span></span></span></span> has reached the end of <span class="maths katex-rendered">l</mi>2</mn></mrow><annotation encoding="application/x-tex">l2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">2</span></span></span></span></span>, set to <span class="maths katex-rendered">0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">0</span></span></span></span></span>.</li>
Set <span class="maths katex-rendered">s</mi>u</mi>m</mi>=</mo>x</mi>+</mo>y</mi>+</mo>c</mi>a</mi>r</mi>r</mi>y</mi></mrow><annotation encoding="application/x-tex">sum = x + y + carry</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.58333em;"></span><span class="strut bottom" style="height: 0.77777em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">s</span><span class="mord mathit">u</span><span class="mord mathit">m</span>=</span><span class="mord mathit">x</span>+</span><span class="mord mathit" style="margin-right: 0.03588em;">y</span>+</span><span class="mord mathit">c</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit" style="margin-right: 0.03588em;">y</span></span></span></span></span>.</li>
Update <span class="maths katex-rendered">c</mi>a</mi>r</mi>r</mi>y</mi>=</mo>s</mi>u</mi>m</mi>/</mi>1</mn>0</mn></mrow><annotation encoding="application/x-tex">carry = sum / 10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit" style="margin-right: 0.03588em;">y</span>=</span><span class="mord mathit">s</span><span class="mord mathit">u</span><span class="mord mathit">m</span><span class="mord mathrm">/</span><span class="mord mathrm">1</span><span class="mord mathrm">0</span></span></span></span></span>.</li>
Create a new node with the digit value of <span class="maths katex-rendered">(</mo>s</mi>u</mi>m</mi>mod</mo></mo>1</mn>0</mn>)</mo></mrow><annotation encoding="application/x-tex">(sum bmod 10)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathit">s</span><span class="mord mathit">u</span><span class="mord mathit">m</span><span class="mspace negativemediumspace"></span><span class="mspace thickspace"></span>mod</span><span class="mord mathrm"><span class="mspace thickspace"></span><span class="mspace negativemediumspace"></span><span class="mord mathrm">1</span></span><span class="mord mathrm">0</span>)</span></span></span></span></span> and set it to current node's next, then advance current node to next.</li>
Advance both <span class="maths katex-rendered">p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">p</span></span></span></span></span> and <span class="maths katex-rendered">q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">q</span></span></span></span></span>.</li>
</ul>
</li>
Check if <span class="maths katex-rendered">c</mi>a</mi>r</mi>r</mi>y</mi>=</mo>1</mn></mrow><annotation encoding="application/x-tex">carry = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.83888em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit" style="margin-right: 0.03588em;">y</span>=</span><span class="mord mathrm">1</span></span></span></span></span>, if so append a new node with digit <span class="maths katex-rendered">1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span></span></span></span></span> to the returning list.</li>
Return dummy head's next node.</li>
</ul>
Note that we use a dummy head to simplify the code. Without a dummy head, you would have to write extra conditional statements to initialize the head's value.</p>
Take extra caution of the following cases:</p>



Test case</th>
Explanation</th>
</tr>
</thead>



<span class="maths katex-rendered">l</mi>1</mn>=</mo>[</mo>0</mn>,</mo>1</mn>]</mo></mrow><annotation encoding="application/x-tex">l1=[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">1</span>=</span>[</span><span class="mord mathrm">0</span>,</span><span class="mord mathrm">1</span>]</span></span></span></span></span><span class="maths katex-rendered">l</mi>2</mn>=</mo>[</mo>0</mn>,</mo>1</mn>,</mo>2</mn>]</mo></mrow><annotation encoding="application/x-tex">l2=[0,1,2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">2</span>=</span>[</span><span class="mord mathrm">0</span>,</span><span class="mord mathrm">1</span>,</span><span class="mord mathrm">2</span>]</span></span></span></span></span>
</td>
When one list is longer than the other.</td>
</tr>


<span class="maths katex-rendered">l</mi>1</mn>=</mo>[</mo>]</mo></mrow><annotation encoding="application/x-tex">l1=[]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">1</span>=</span>[</span>]</span></span></span></span></span><span class="maths katex-rendered">l</mi>2</mn>=</mo>[</mo>0</mn>,</mo>1</mn>]</mo></mrow><annotation encoding="application/x-tex">l2=[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">2</span>=</span>[</span><span class="mord mathrm">0</span>,</span><span class="mord mathrm">1</span>]</span></span></span></span></span>
</td>
When one list is null, which means an empty list.</td>
</tr>


<span class="maths katex-rendered">l</mi>1</mn>=</mo>[</mo>9</mn>,</mo>9</mn>]</mo></mrow><annotation encoding="application/x-tex">l1=[9,9]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">1</span>=</span>[</span><span class="mord mathrm">9</span>,</span><span class="mord mathrm">9</span>]</span></span></span></span></span><span class="maths katex-rendered">l</mi>2</mn>=</mo>[</mo>1</mn>]</mo></mrow><annotation encoding="application/x-tex">l2=[1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">2</span>=</span>[</span><span class="mord mathrm">1</span>]</span></span></span></span></span>
</td>
The sum could have an extra carry of one at the end, which is easy to forget.</td>
</tr>
</tbody>
</table>
Java</strong></p>
</span>public</span> ListNode</span> addTwoNumbers</span>(</span>ListNode</span> l1</span>,</span> ListNode</span> l2</span>)</span> {</span>
    ListNode</span> dummyHead</span> =</span> new</span> ListNode</span>(</span>0</span>);</span>
    ListNode</span> p</span> =</span> l1</span>,</span> q</span> =</span> l2</span>,</span> curr</span> =</span> dummyHead</span>;</span>
    int</span> carry</span> =</span> 0</span>;</span>
    while</span> (</span>p</span> !=</span> null</span> ||</span> q</span> !=</span> null</span>)</span> {</span>
        int</span> x</span> =</span> (</span>p</span> !=</span> null</span>)</span> ?</span> p</span>.</span>val</span> :</span> 0</span>;</span>
        int</span> y</span> =</span> (</span>q</span> !=</span> null</span>)</span> ?</span> q</span>.</span>val</span> :</span> 0</span>;</span>
        int</span> sum</span> =</span> carry</span> +</span> x</span> +</span> y</span>;</span>
        carry</span> =</span> sum</span> /</span> 10</span>;</span>
        curr</span>.</span>next</span> =</span> new</span> ListNode</span>(</span>sum</span> %</span> 10</span>);</span>
        curr</span> =</span> curr</span>.</span>next</span>;</span>
        if</span> (</span>p</span> !=</span> null</span>)</span> p</span> =</span> p</span>.</span>next</span>;</span>
        if</span> (</span>q</span> !=</span> null</span>)</span> q</span> =</span> q</span>.</span>next</span>;</span>
    }</span>
    if</span> (</span>carry</span> &gt;</span> 0</span>)</span> {</span>
        curr</span>.</span>next</span> =</span> new</span> ListNode</span>(</span>carry</span>);</span>
    }</span>
    return</span> dummyHead</span>.</span>next</span>;</span>
}</span>
</pre></div>


Complexity Analysis</strong></p>


Time complexity : <span class="maths katex-rendered">O</mi>(</mo>max</mi>(</mo>m</mi>,</mo>n</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">O(max(m, n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span>max</span>(</span><span class="mord mathit">m</span>,</span><span class="mord mathit">n</span>)</span>)</span></span></span></span></span>. Assume that <span class="maths katex-rendered">m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span></span></span></span></span> and <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> represents the length of <span class="maths katex-rendered">l</mi>1</mn></mrow><annotation encoding="application/x-tex">l1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">1</span></span></span></span></span> and <span class="maths katex-rendered">l</mi>2</mn></mrow><annotation encoding="application/x-tex">l2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathrm">2</span></span></span></span></span> respectively, the algorithm above iterates at most <span class="maths katex-rendered">max</mi>(</mo>m</mi>,</mo>n</mi>)</mo></mrow><annotation encoding="application/x-tex">max(m, n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">max</span>(</span><span class="mord mathit">m</span>,</span><span class="mord mathit">n</span>)</span></span></span></span></span> times.</p>
</li>

Space complexity : <span class="maths katex-rendered">O</mi>(</mo>max</mi>(</mo>m</mi>,</mo>n</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">O(max(m, n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span>max</span>(</span><span class="mord mathit">m</span>,</span><span class="mord mathit">n</span>)</span>)</span></span></span></span></span>. The length of the new list is at most <span class="maths katex-rendered">max</mi>(</mo>m</mi>,</mo>n</mi>)</mo>+</mo>1</mn></mrow><annotation encoding="application/x-tex">max(m,n) + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">max</span>(</span><span class="mord mathit">m</span>,</span><span class="mord mathit">n</span>)</span>+</span><span class="mord mathrm">1</span></span></span></span></span>.</p>
</li>
</ul>
Follow up</strong></p>
What if the the digits in the linked list are stored in non-reversed order? For example:</p>

<p class="maths katex-rendered">(</mo>3</mn>→</mo>4</mn>→</mo>2</mn>)</mo>+</mo>(</mo>4</mn>→</mo>6</mn>→</mo>5</mn>)</mo>=</mo>8</mn>→</mo>0</mn>→</mo>7</mn></mrow><annotation encoding="application/x-tex">
(3 to 4 to 2) + (4 to 6 to 5) = 8 to 0 to 7
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base displaystyle textstyle uncramped">(</span><span class="mord mathrm">3</span>→</span><span class="mord mathrm">4</span>→</span><span class="mord mathrm">2</span>)</span>+</span>(</span><span class="mord mathrm">4</span>→</span><span class="mord mathrm">6</span>→</span><span class="mord mathrm">5</span>)</span>=</span><span class="mord mathrm">8</span>→</span><span class="mord mathrm">0</span>→</span><span class="mord mathrm">7</span></span></span></span></span></p>
</p>