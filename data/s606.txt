<div class="toc hide">

<a href="#solution">Solution</a>
<a href="#approach-1-brute-force-time-limit-exceeded">Approach #1 Brute Force [Time Limit Exceeded]</a></li>
<a href="#approach-2-using-recursion-with-memoizationtime-limit-exceeded">Approach #2 Using Recursion with memoization[Time Limit Exceeded]</a></li>
<a href="#approach-3-iterative-solution-time-limit-exceeded">Approach #3  Iterative Solution [Time Limit Exceeded]</a></li>
<a href="#approach-4-optimized-iterative-accepted">Approach #4  Optimized Iterative [Accepted]</a></li>
<a href="#approach-5-using-extra-list-accepted">Approach #5 Using Extra List [Accepted]</a></li>
<a href="#approach-6-using-priority-queue-accepted">Approach #6 Using Priority Queue [Accepted]</a></li>
</ul>
</li>
</ul>
</div>
Solution</h2>

<h4 id="approach-1-brute-force-time-limit-exceeded">Approach #1 Brute Force [Time Limit Exceeded]</h4>
Algorithm</strong></p>
The most naive solution will be to consider every possible permutation of the given courses and to try to take as much courses as possible by  taking the courses in a serial order in every permutation. We can find out the maximum number of courses that can be taken from out of values obtained from these permutations.</p>
Complexity Analysis</strong></p>


Time complexity : <span class="maths katex-rendered">O</mi>(</mo>(</mo>n</mi>+</mo>1</mn>)</mo>!</mo>)</mo></mrow><annotation encoding="application/x-tex">Obig((n+1)!big)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.85em;"></span><span class="strut bottom" style="height: 1.20001em; vertical-align: -0.35001em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span>(</span><span class="mord mathit">n</span>+</span><span class="mord mathrm">1</span>)</span>!</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span></span></span></span></span>. A total of <span class="maths katex-rendered">n</mi>!</mo></mrow><annotation encoding="application/x-tex">n!</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span>!</span></span></span></span></span> permutations are possible for the <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi></mrow><annotation encoding="application/x-tex">courses</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span></span></span> array of length <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span>. For every permutation, we scan over the <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> elements of the permutation to find the number of courses that can be taken in each case.</p>
</li>

Space complexity : <span class="maths katex-rendered">O</mi>(</mo>n</mi>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">n</span>)</span></span></span></span></span>. Each permutation needs <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> space.</p>
</li>
</ul>

<h4 id="approach-2-using-recursion-with-memoizationtime-limit-exceeded">Approach #2 Using Recursion with memoization[Time Limit Exceeded]</h4>
Algorithm</strong></p>
Before we move on to the better approaches, let's discuss one basic idea to solve the given problem. Suppose, we are considering only two courses <span class="maths katex-rendered">(</mo>a</mi>,</mo>x</mi>)</mo></mrow><annotation encoding="application/x-tex">(a,x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathit">a</span>,</span><span class="mord mathit">x</span>)</span></span></span></span></span> and <span class="maths katex-rendered">(</mo>b</mi>,</mo>y</mi>)</mo></mrow><annotation encoding="application/x-tex">(b,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathit">b</span>,</span><span class="mord mathit" style="margin-right: 0.03588em;">y</span>)</span></span></span></span></span>. Let's assume <span class="maths katex-rendered">y</mi>&gt;</mo>x</mi></mrow><annotation encoding="application/x-tex">y&gt;x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.5391em;"></span><span class="strut bottom" style="height: 0.73354em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">y</span>&gt;</span><span class="mord mathit">x</span></span></span></span></span>. Now, we'll look at the various relative values which <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span> and <span class="maths katex-rendered">b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span></span></span></span></span> can take, and which course should be taken first in each of these cases. In all the cases, we assume that the course's duration is always lesser than its end day i.e. <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span> and <span class="maths katex-rendered">b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span></span></span></span></span>.</p>


<span class="maths katex-rendered">(a+b) ≤ x</span><script type="math/tex">(a+b) ≤ x</script></span>: In this case, we can take the courses in any order. Both the courses can be taken irrespective of the order in which the courses are taken.</li>
</ol>
<img alt="Courses" src="../Figures/630/630_Course_Schedule_III_1.PNG"></p>


<span class="maths katex-rendered">(</mo>a</mi>+</mo>b</mi>)</mo>&gt;</mo>x</mi></mrow><annotation encoding="application/x-tex">(a+b)&gt;x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathit">a</span>+</span><span class="mord mathit">b</span>)</span>&gt;</span><span class="mord mathit">x</span></span></span></span></span>, <span class="maths katex-rendered">a</mi>&gt;</mo>b</mi></mrow><annotation encoding="application/x-tex">a&gt;b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.73354em; vertical-align: -0.0391em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span>&gt;</span><span class="mord mathit">b</span></span></span></span></span>, <span class="maths katex-rendered">((a+b) ≤ y)</span>: In this case, as is evident from the figure, both the courses can be taken only by taking course <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span> before <span class="maths katex-rendered">b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span></span></span></span></span>.</li>
</ol>
<img alt="Courses" src="../Figures/630/630_Course_Schedule_III_2.PNG"></p>


<span class="maths katex-rendered">(</mo>a</mi>+</mo>b</mi>)</mo>&gt;</mo>x</mi></mrow><annotation encoding="application/x-tex">(a+b)&gt;x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathit">a</span>+</span><span class="mord mathit">b</span>)</span>&gt;</span><span class="mord mathit">x</span></span></span></span></span>, <span class="maths katex-rendered">b</mi>&gt;</mo>a</mi></mrow><annotation encoding="application/x-tex">b&gt;a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.73354em; vertical-align: -0.0391em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span>&gt;</span><span class="mord mathit">a</span></span></span></span></span>, <span class="maths katex-rendered">((a+b) ≤ y)</span>: In this case also, both the courses can be taken only by taking course <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span> before <span class="maths katex-rendered">b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span></span></span></span></span>.</li>
</ol>
<img alt="Courses" src="../Figures/630/630_Course_Schedule_III_3.PNG"></p>


<span class="maths katex-rendered">(</mo>a</mi>+</mo>b</mi>)</mo>&gt;</mo>y</mi></mrow><annotation encoding="application/x-tex">(a+b)&gt;y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathit">a</span>+</span><span class="mord mathit">b</span>)</span>&gt;</span><span class="mord mathit" style="margin-right: 0.03588em;">y</span></span></span></span></span>: In this case, irrespective of the order in which we take the courses, only one course can be taken.</li>
</ol>
<img alt="Courses" src="../Figures/630/630_Course_Schedule_III_4.PNG"></p>
From the above example, we can conclude that it is always profitable to take the course with a smaller end day prior to a course with a larger end day. This is because, the course with a smaller duration, if can be taken, can surely be taken only if it is taken prior to a course with a larger end day. </p>
Based on this idea, firstly, we sort the given <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi></mrow><annotation encoding="application/x-tex">courses</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span></span></span> array based on their end days. Then, we try to take the courses in a serial order from this sorted <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi></mrow><annotation encoding="application/x-tex">courses</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span></span></span> array. </p>
In order to solve the given problem, we make use of a recursive function schedule(courses, i, time)</code> which returns the maximum number of courses that can be taken starting from the <span class="maths katex-rendered">i</mi>t</mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">i^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 0.849108em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course(starting from 0), given the time aleady consumed by the other courses is <span class="maths katex-rendered">t</mi>i</mi>m</mi>e</mi></mrow><annotation encoding="application/x-tex">time</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">m</span><span class="mord mathit">e</span></span></span></span></span>, i.e. the current time is <span class="maths katex-rendered">t</mi>i</mi>m</mi>e</mi></mrow><annotation encoding="application/x-tex">time</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">m</span><span class="mord mathit">e</span></span></span></span></span>, given a <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi></mrow><annotation encoding="application/x-tex">courses</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span></span></span> array as the schedule.</p>
Now, in each function call to schedule(courses, i, time)</code>, we try to include the current course in the taken courses. But, this can be done only if <span class="maths katex-rendered">t</mi>i</mi>m</mi>e</mi>+</mo>d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub>&lt;</mo>e</mi>n</mi>d</mi>_</mi>d</mi>a</mi>y</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">time + duration_i &lt; end_day_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">m</span><span class="mord mathit">e</span>+</span><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>&lt;</span><span class="mord mathit">e</span><span class="mord mathit">n</span><span class="mord mathit">d</span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord mathit">d</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.03588em;">y</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: -0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>. Here, <span class="maths katex-rendered">d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">duration_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.84444em; vertical-align: -0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> refers to the duration of the <span class="maths katex-rendered">i</mi>t</mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">i^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 0.849108em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course and <span class="maths katex-rendered">e</mi>n</mi>d</mi>_</mi>d</mi>a</mi>y</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">end_day_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord mathit">e</span><span class="mord mathit">n</span><span class="mord mathit">d</span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord mathit">d</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.03588em;">y</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: -0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> refers to the end day of the <span class="maths katex-rendered">i</mi>t</mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">i^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 0.849108em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course. </p>
If the course can be taken, we increment the number of courses taken and obtain the number of courses that can be taken by passing the updated time and courses' index. i.e. we make the function call schedule(courses, i + 1, time + duration_i)</code>. Let's say, we store the number of courses that can be taken by taking the current course in <span class="maths katex-rendered">t</mi>a</mi>k</mi>e</mi>n</mi></mrow><annotation encoding="application/x-tex">taken</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.03148em;">k</span><span class="mord mathit">e</span><span class="mord mathit">n</span></span></span></span></span> variable.</p>
Further, for every current course, we also leave the current course, and find the number of courses that can be taken thereof. Now, we need not update the time, but we need to update the courses' index. Thus, we make the function call, schedule(courses, i + 1, time)</code>. Let's say, we store the count obtained in <span class="maths katex-rendered">n</mi>o</mi>t</mi>_</mi>t</mi>a</mi>k</mi>e</mi>n</mi></mrow><annotation encoding="application/x-tex">not_taken</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mord mathit">o</span><span class="mord mathit">t</span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord mathit">t</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.03148em;">k</span><span class="mord mathit">e</span><span class="mord mathit">n</span></span></span></span></span> variable. </p>
While returning the number of courses at the end of each function call, we return the maximum value out of <span class="maths katex-rendered">t</mi>a</mi>k</mi>e</mi>n</mi></mrow><annotation encoding="application/x-tex">taken</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.03148em;">k</span><span class="mord mathit">e</span><span class="mord mathit">n</span></span></span></span></span> and <span class="maths katex-rendered">n</mi>o</mi>t</mi>_</mi>t</mi>a</mi>k</mi>e</mi>n</mi></mrow><annotation encoding="application/x-tex">not_taken</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mord mathit">o</span><span class="mord mathit">t</span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord mathit">t</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.03148em;">k</span><span class="mord mathit">e</span><span class="mord mathit">n</span></span></span></span></span>.</p>
Thus, the function call schedule(courses, 0, 0)</code> gives the required result.</p>
In order to remove this redundancy, we make use of a memoization array <span class="maths katex-rendered">m</mi>e</mi>m</mi>o</mi></mrow><annotation encoding="application/x-tex">memo</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">e</span><span class="mord mathit">m</span><span class="mord mathit">o</span></span></span></span></span>, such that <span class="maths katex-rendered">m</mi>e</mi>m</mi>o</mi>[</mo>i</mi>]</mo>[</mo>j</mi>]</mo></mrow><annotation encoding="application/x-tex">memo[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">e</span><span class="mord mathit">m</span><span class="mord mathit">o</span>[</span><span class="mord mathit">i</span>]</span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span></span></span></span></span> is used to store the result of the function call schedule(courses, i, time)</code>. Thus, whenever the same function call is made again, we can return the result directly from the <span class="maths katex-rendered">m</mi>e</mi>m</mi>o</mi></mrow><annotation encoding="application/x-tex">memo</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">e</span><span class="mord mathit">m</span><span class="mord mathit">o</span></span></span></span></span> array. This helps to prune the search space to a great extent.</p>
Java</strong></p>
</span>public</span> class</span> Solution</span> {</span>
    public</span> int</span> scheduleCourse</span>(</span>int</span>[][]</span> courses</span>)</span> {</span>
        Arrays</span>.</span>sort</span>(</span>courses</span>,</span> (</span>a</span>,</span> b</span>)</span> -&gt;</span> a</span>[</span>1</span>]</span> -</span> b</span>[</span>1</span>]);</span>
        Integer</span>[][]</span> memo</span> =</span> new</span> Integer</span>[</span>courses</span>.</span>length</span>][</span>courses</span>[</span>courses</span>.</span>length</span> -</span> 1</span>][</span>1</span>]</span> +</span> 1</span>];</span>
        return</span> schedule</span>(</span>courses</span>,</span> 0</span>,</span> 0</span>,</span> memo</span>);</span>
    }</span>
    public</span> int</span> schedule</span>(</span>int</span>[][]</span> courses</span>,</span> int</span> i</span>,</span> int</span> time</span>,</span> Integer</span>[][]</span> memo</span>)</span> {</span>
        if</span> (</span>i</span> ==</span> courses</span>.</span>length</span>)</span>
            return</span> 0</span>;</span>
        if</span> (</span>memo</span>[</span>i</span>][</span>time</span>]</span> !=</span> null</span>)</span>
            return</span> memo</span>[</span>i</span>][</span>time</span>];</span>
        int</span> taken</span> =</span> 0</span>;</span>
        if</span> (</span>time</span> +</span> courses</span>[</span>i</span>][</span>0</span>]</span> &lt;=</span> courses</span>[</span>i</span>][</span>1</span>])</span>
            taken</span> =</span> 1</span> +</span> schedule</span>(</span>courses</span>,</span> i</span> +</span> 1</span>,</span> time</span> +</span> courses</span>[</span>i</span>][</span>0</span>],</span> memo</span>);</span>
        int</span> not_taken</span> =</span> schedule</span>(</span>courses</span>,</span> i</span> +</span> 1</span>,</span> time</span>,</span> memo</span>);</span>
        memo</span>[</span>i</span>][</span>time</span>]</span> =</span> Math</span>.</span>max</span>(</span>taken</span>,</span> not_taken</span>);</span>
        return</span> memo</span>[</span>i</span>][</span>time</span>];</span>
    }</span>
}</span>
</pre></div>


Complexity Analysis</strong></p>


Time complexity : <span class="maths katex-rendered">O</mi>(</mo>n</mi>∗</mo>d</mi>)</mo></mrow><annotation encoding="application/x-tex">O(n*d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">n</span>∗</span><span class="mord mathit">d</span>)</span></span></span></span></span>. <span class="maths katex-rendered">m</mi>e</mi>m</mi>o</mi></mrow><annotation encoding="application/x-tex">memo</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">e</span><span class="mord mathit">m</span><span class="mord mathit">o</span></span></span></span></span> array of size <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span>x<span class="maths katex-rendered">d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span></span></span></span></span> is filled once. Here, <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> refers to the number of courses in the given <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi></mrow><annotation encoding="application/x-tex">courses</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span></span></span> array and <span class="maths katex-rendered">d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span></span></span></span></span> refers to the maximum value of the end day from all the end days in the <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi></mrow><annotation encoding="application/x-tex">courses</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span></span></span> array.</p>
</li>

Space complexity : <span class="maths katex-rendered">O</mi>(</mo>n</mi>∗</mo>d</mi>)</mo></mrow><annotation encoding="application/x-tex">O(n*d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">n</span>∗</span><span class="mord mathit">d</span>)</span></span></span></span></span>. <span class="maths katex-rendered">m</mi>e</mi>m</mi>o</mi></mrow><annotation encoding="application/x-tex">memo</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">e</span><span class="mord mathit">m</span><span class="mord mathit">o</span></span></span></span></span> array of size <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span>x<span class="maths katex-rendered">d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span></span></span></span></span> is used.</p>
</li>
</ul>

<h4 id="approach-3-iterative-solution-time-limit-exceeded">Approach #3  Iterative Solution [Time Limit Exceeded]</h4>
For the current approach, the idea goes as follows. As discussed in the previous approaches, we need to sort the given <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi></mrow><annotation encoding="application/x-tex">courses</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span></span></span> array based on the end days. Thus, we consider the courses in the ascending order of their end days. We keep a track of the current time in a <span class="maths katex-rendered">t</mi>i</mi>m</mi>e</mi></mrow><annotation encoding="application/x-tex">time</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">m</span><span class="mord mathit">e</span></span></span></span></span> variable. Along with this, we also keep a track of the number of courses taken till now in <span class="maths katex-rendered">c</mi>o</mi>u</mi>n</mi>t</mi></mrow><annotation encoding="application/x-tex">count</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.61508em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span></span></span></span></span> variable.</p>
For each course being considered currently(let's say <span class="maths katex-rendered">i</mi>t</mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">i^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 0.849108em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course), we try to take this course. But, to be able to do so, the current course should end before its corresponding end day i.e. <span class="maths katex-rendered">(time + duration_i ≤ endday_i)</span>. Here, <span class="maths katex-rendered">d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">duration_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.84444em; vertical-align: -0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> refers to the duration of the <span class="maths katex-rendered">i</mi>t</mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">i^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 0.849108em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course and <span class="maths katex-rendered">e</mi>n</mi>d</mi>_</mi>d</mi>a</mi>y</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">end_day_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord mathit">e</span><span class="mord mathit">n</span><span class="mord mathit">d</span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord mathit">d</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.03588em;">y</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: -0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> refers to the end day of the <span class="maths katex-rendered">i</mi>t</mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">i^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 0.849108em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course. </p>
If this course can be taken, we update the current time to <span class="maths katex-rendered">t</mi>i</mi>m</mi>e</mi>+</mo>d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">time + duration_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.84444em; vertical-align: -0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">m</span><span class="mord mathit">e</span>+</span><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> and also increment the current <span class="maths katex-rendered">c</mi>o</mi>u</mi>n</mi>t</mi></mrow><annotation encoding="application/x-tex">count</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.61508em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span></span></span></span></span> value to indicate that one more course has been taken. </p>
But, if we aren't able to take the current course i.e. <span class="maths katex-rendered">t</mi>i</mi>m</mi>e</mi>+</mo>d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub>&gt;</mo>e</mi>n</mi>d</mi>_</mi>d</mi>a</mi>y</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">time + duration_i &gt; end_day_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">m</span><span class="mord mathit">e</span>+</span><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>&gt;</span><span class="mord mathit">e</span><span class="mord mathit">n</span><span class="mord mathit">d</span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord mathit">d</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.03588em;">y</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: -0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>, we can try to take this course by removing some other course from amongst the courses that have already been taken. But, the current course can fit in by removing some other course, only if the duration of the course(<span class="maths katex-rendered">j</mi>t</mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">j^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 1.04355em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>) being removed <span class="maths katex-rendered">d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>j</mi></msub></mrow><annotation encoding="application/x-tex">duration_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.980548em; vertical-align: -0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight" style="margin-right: 0.05724em;">j</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> is larger than the current course's duration, <span class="maths katex-rendered">d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">duration_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.84444em; vertical-align: -0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> i.e. <span class="maths katex-rendered">d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>j</mi></msub>&gt;</mo>d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">duration_j &gt; duration_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.980548em; vertical-align: -0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight" style="margin-right: 0.05724em;">j</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>&gt;</span><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>. </p>
We are sure of the fact that by removing the <span class="maths katex-rendered">j</mi>t</mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">j^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 1.04355em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course, we can fit in the current course, because, <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>j</mi></msub></mrow><annotation encoding="application/x-tex">course_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.716668em; vertical-align: -0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight" style="margin-right: 0.05724em;">j</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> was already fitting in the duration available till now. Since, <span class="maths katex-rendered">d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub>&lt;</mo>d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>j</mi></msub></mrow><annotation encoding="application/x-tex">duration_i &lt; duration_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.980548em; vertical-align: -0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>&lt;</span><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight" style="margin-right: 0.05724em;">j</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>, the current course can surely take its place. Thus, we look for a course from amongst the taken courses having a duration larger than the current course.</p>
But why are we doing this replacement? The answer to this question is as follows. By replacing the <span class="maths katex-rendered">j</mi>t</mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">j^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 1.04355em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course, with the <span class="maths katex-rendered">i</mi>t</mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">i^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 0.849108em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course of a relatively smaller duration, we can increase the time available for upcoming courses to be taken. An extra <span class="maths katex-rendered">d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>j</mi></msub>−</mo>d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">duration_j - duration_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.980548em; vertical-align: -0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight" style="margin-right: 0.05724em;">j</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>−</span><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> time can be made available by doing so. </p>
Now, for this saving in time to be maximum, the course taken for the replacement should be the one with the maximum duration. Thus, from amongst the courses that have been taken till now, we find the course having the maximum duration which should be more than the duration of the current course(which can't be taken). </p>
Let's say, this course be called as <span class="maths katex-rendered">m</mi>a</mi>x</mi>_</mi>i</mi></mrow><annotation encoding="application/x-tex">max_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.96952em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mord mathit">x</span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord mathit">i</span></span></span></span></span>. Thus, now, a saving of <span class="maths katex-rendered">d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>m</mi>a</mi>x</mi>_</mi>i</mi></mrow></msub>−</mo>d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">duration_{max_i} - duration_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.06144em; vertical-align: -0.367em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathit mtight">m</span><span class="mord mathit mtight">a</span><span class="mord mathit mtight">x</span><span class="mord mathrm mtight" style="margin-right: 0.02778em;">_</span><span class="mord mathit mtight">i</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>−</span><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> can be achived, which could help later in fitting in more courses to be taken.</p>
If such a course, <span class="maths katex-rendered">m</mi>a</mi>x</mi>_</mi>i</mi></mrow><annotation encoding="application/x-tex">max_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.96952em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mord mathit">x</span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord mathit">i</span></span></span></span></span>, is found, we remove this course from the taken courses and consider the current course as taekn. We also mark this course with <span class="maths katex-rendered">-</mi>1</mn></mtext></mrow><annotation encoding="application/x-tex">text{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">-1</span></span></span></span></span></span> to indicate that this course has not been taken and should not be considered in the future again for replacement. </p>
But, if such a course isn't found, we can't take the current course at any cost. Thus, we mark the current course with <span class="maths katex-rendered">-</mi>1</mn></mtext></mrow><annotation encoding="application/x-tex">text{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">-1</span></span></span></span></span></span> to indicate that the current course has not been taken.</p>
At the end, the value of <span class="maths katex-rendered">c</mi>o</mi>u</mi>n</mi>t</mi></mrow><annotation encoding="application/x-tex">count</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.61508em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span></span></span></span></span> gives the required result.</p>
The following animation illustrates the process.</p>
<div class="diaporama" style="width: 940px; height: 529px;"><div class="initial-play play-container"><div class="fa fa-play"></div></div><canvas width="940" height="529" style="width: 940px; height: 529px;"></canvas></div><div class="control-panel" style="width: 940px;"><div class="control-group dia-back fa fa-step-backward"></div><div class="toggle-play control-group fa fa-play"></div><div class="control-group fa fa-step-forward"></div></div>1 / 13</div></div></div>
Java</strong></p>
</span>public</span> class</span> Solution</span> {</span>
    public</span> int</span> scheduleCourse</span>(</span>int</span>[][]</span> courses</span>)</span> {</span>
        System</span>.</span>out</span>.</span>println</span>(</span>courses</span>.</span>length</span>);</span>
        Arrays</span>.</span>sort</span>(</span>courses</span>,</span> (</span>a</span>,</span> b</span>)</span> -&gt;</span> a</span>[</span>1</span>]</span> -</span> b</span>[</span>1</span>]);</span>
        int</span> time</span> =</span> 0</span>,</span> count</span> =</span> 0</span>;</span>
        for</span> (</span>int</span> i</span> =</span> 0</span>;</span> i</span> &lt;</span> courses</span>.</span>length</span>;</span> i</span>++)</span> {</span>
            if</span> (</span>time</span> +</span> courses</span>[</span>i</span>][</span>0</span>]</span> &lt;=</span> courses</span>[</span>i</span>][</span>1</span>])</span> {</span>
                time</span> +=</span> courses</span>[</span>i</span>][</span>0</span>];</span>
                count</span>++;</span>
            }</span> else</span> {</span>
                int</span> max_i</span> =</span> i</span>;</span>
                for</span> (</span>int</span> j</span> =</span> 0</span>;</span> j</span> &lt;</span> i</span>;</span> j</span>++)</span> {</span>
                    if</span> (</span>courses</span>[</span>j</span>][</span>0</span>]</span> &gt;</span> courses</span>[</span>max_i</span>][</span>0</span>])</span>
                        max_i</span> =</span> j</span>;</span>
                }</span>
                if</span> (</span>courses</span>[</span>max_i</span>][</span>0</span>]</span> &gt;</span> courses</span>[</span>i</span>][</span>0</span>])</span> {</span>
                    time</span> +=</span> courses</span>[</span>i</span>][</span>0</span>]</span> -</span> courses</span>[</span>max_i</span>][</span>0</span>];</span>
                }</span>
                courses</span>[</span>max_i</span>][</span>0</span>]</span> =</span> -</span>1</span>;</span>
            }</span>
        }</span>
        return</span> count</span>;</span>
    }</span>
}</span>
</pre></div>


Complexity Analysis</strong></p>


Time complexity : <span class="maths katex-rendered">O</mi>(</mo>n</mi>2</mn></msup>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 1.06411em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">n</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>)</span></span></span></span></span>.  We iterate over the <span class="maths katex-rendered">c</mi>o</mi>u</mi>n</mi>t</mi></mrow><annotation encoding="application/x-tex">count</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.61508em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span></span></span></span></span> array of size <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> once. For every element currently considered, we could scan backwards till the first element, giving <span class="maths katex-rendered">O</mi>(</mo>n</mi>2</mn></msup>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 1.06411em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">n</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>)</span></span></span></span></span> complexity. Sorting the <span class="maths katex-rendered">c</mi>o</mi>u</mi>n</mi>t</mi></mrow><annotation encoding="application/x-tex">count</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.61508em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span></span></span></span></span> array takes <span class="maths katex-rendered">O</mi>(</mo>n</mi>l</mi>o</mi>g</mi>(</mo>n</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">Obig(nlog(n)big)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.85em;"></span><span class="strut bottom" style="height: 1.20001em; vertical-align: -0.35001em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span>(</span><span class="mord mathit">n</span>)</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span></span></span></span></span> time for <span class="maths katex-rendered">c</mi>o</mi>u</mi>n</mi>t</mi></mrow><annotation encoding="application/x-tex">count</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.61508em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span></span></span></span></span> array.</p>
</li>

Space complexity : <span class="maths katex-rendered">O</mi>(</mo>1</mn>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathrm">1</span>)</span></span></span></span></span>. Constant extra space is used.</p>
</li>
</ul>

<h4 id="approach-4-optimized-iterative-accepted">Approach #4  Optimized Iterative [Accepted]</h4>
In the last approach, we've seen that, in the case of current course which can't be taken direclty, i.e. for <span class="maths katex-rendered">t</mi>i</mi>m</mi>e</mi>+</mo>d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub>&gt;</mo>e</mi>n</mi>d</mi>_</mi>d</mi>a</mi>y</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">time + duration_i &gt; end_day_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">m</span><span class="mord mathit">e</span>+</span><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>&gt;</span><span class="mord mathit">e</span><span class="mord mathit">n</span><span class="mord mathit">d</span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord mathit">d</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.03588em;">y</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: -0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>, we need to traverse back in the <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi></mrow><annotation encoding="application/x-tex">courses</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span></span></span> array till the beginning to find a course with the maximum duration which is larger than the current course's duration. This backward traversal also goes through the courses which aren't  taken and thus, can't be replaced, and have been marked as <span class="maths katex-rendered">-</mi>1</mn></mtext></mrow><annotation encoding="application/x-tex">text{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">-1</span></span></span></span></span></span>. </p>
We can bring in some optimization here. For this, we should search among only those courses which have been taken(and not the ones which haven't been taken). </p>
To do so, as we iterate over the <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi></mrow><annotation encoding="application/x-tex">courses</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span></span></span> array, we also keep on updating it, such that the first <span class="maths katex-rendered">c</mi>o</mi>u</mi>n</mi>t</mi></mrow><annotation encoding="application/x-tex">count</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.61508em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span></span></span></span></span> number of elements in this array now correspond to only those <span class="maths katex-rendered">c</mi>o</mi>u</mi>n</mi>t</mi></mrow><annotation encoding="application/x-tex">count</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.61508em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span></span></span></span></span> number of courses which have been taken till now. </p>
Thus, whenever we update the <span class="maths katex-rendered">c</mi>o</mi>u</mi>n</mi>t</mi></mrow><annotation encoding="application/x-tex">count</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.61508em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span></span></span></span></span> to indicate that one more course has been taken, we also update the <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi>[</mo>c</mi>o</mi>u</mi>n</mi>t</mi>]</mo></mrow><annotation encoding="application/x-tex">courses[count]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span>[</span><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span>]</span></span></span></span></span> entry to 
reflect the current course that has just been taken. </p>
Whenever, we find a course for which <span class="maths katex-rendered">t</mi>i</mi>m</mi>e</mi>+</mo>d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub>&gt;</mo>e</mi>n</mi>d</mi>_</mi>d</mi>a</mi>y</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">time + duration_i &gt; end_day_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">m</span><span class="mord mathit">e</span>+</span><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>&gt;</span><span class="mord mathit">e</span><span class="mord mathit">n</span><span class="mord mathit">d</span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord mathit">d</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.03588em;">y</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: -0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>, we find a <span class="maths katex-rendered">m</mi>a</mi>x</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">max_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.58056em; vertical-align: -0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mord mathit">x</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course from only amongst these first <span class="maths katex-rendered">c</mi>o</mi>u</mi>n</mi>t</mi></mrow><annotation encoding="application/x-tex">count</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.61508em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span></span></span></span></span> number of courses in the <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi></mrow><annotation encoding="application/x-tex">courses</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span></span></span> array, which indicate the courses that have been taken till now. </p>
Also, instead of marking this <span class="maths katex-rendered">m</mi>a</mi>x</mi>i</mi>t</mi>h</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">max_i^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 1.10777em; vertical-align: -0.258664em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mord mathit">x</span><span class="" style="top: 0.258664em; margin-left: 0em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course with a <span class="maths katex-rendered">-</mi>1</mn></mtext></mrow><annotation encoding="application/x-tex">text{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">-1</span></span></span></span></span></span>, we can simply replace this course with the current course. Thus, the first <span class="maths katex-rendered">c</mi>o</mi>u</mi>n</mi>t</mi></mrow><annotation encoding="application/x-tex">count</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.61508em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span></span></span></span></span> courses still reflect the courses that have been taken till now.</p>
Java</strong></p>
</span>public</span> class</span> Solution</span> {</span>
    public</span> int</span> scheduleCourse</span>(</span>int</span>[][]</span> courses</span>)</span> {</span>
        System</span>.</span>out</span>.</span>println</span>(</span>courses</span>.</span>length</span>);</span>
        Arrays</span>.</span>sort</span>(</span>courses</span>,</span> (</span>a</span>,</span> b</span>)</span> -&gt;</span> a</span>[</span>1</span>]</span> -</span> b</span>[</span>1</span>]);</span>
        int</span> time</span> =</span> 0</span>,</span> count</span> =</span> 0</span>;</span>
        for</span> (</span>int</span> i</span> =</span> 0</span>;</span> i</span> &lt;</span> courses</span>.</span>length</span>;</span> i</span>++)</span> {</span>
            if</span> (</span>time</span> +</span> courses</span>[</span>i</span>][</span>0</span>]</span> &lt;=</span> courses</span>[</span>i</span>][</span>1</span>])</span> {</span>
                time</span> +=</span> courses</span>[</span>i</span>][</span>0</span>];</span>
                courses</span>[</span>count</span>++]</span> =</span> courses</span>[</span>i</span>];</span>
            }</span> else</span> {</span>
                int</span> max_i</span> =</span> i</span>;</span>
                for</span> (</span>int</span> j</span> =</span> 0</span>;</span> j</span> &lt;</span> count</span>;</span> j</span>++)</span> {</span>
                    if</span> (</span>courses</span>[</span>j</span>][</span>0</span>]</span> &gt;</span> courses</span>[</span>max_i</span>][</span>0</span>])</span>
                        max_i</span> =</span> j</span>;</span>
                }</span>
                if</span> (</span>courses</span>[</span>max_i</span>][</span>0</span>]</span> &gt;</span> courses</span>[</span>i</span>][</span>0</span>])</span> {</span>
                    time</span> +=</span> courses</span>[</span>i</span>][</span>0</span>]</span> -</span> courses</span>[</span>max_i</span>][</span>0</span>];</span>
                    courses</span>[</span>max_i</span>]</span> =</span> courses</span>[</span>i</span>];</span>
                }</span>
            }</span>
        }</span>
        return</span> count</span>;</span>
    }</span>
}</span>
</pre></div>


Complexity Analysis</strong></p>


Time complexity : <span class="maths katex-rendered">O</mi>(</mo>n</mi>∗</mo>c</mi>o</mi>u</mi>n</mi>t</mi>)</mo></mrow><annotation encoding="application/x-tex">O(n*count)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">n</span>∗</span><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span>)</span></span></span></span></span>. We iterate over a total of <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> elements of the <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi></mrow><annotation encoding="application/x-tex">courses</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span></span></span> array. For every element, we can traverse backwards upto atmost <span class="maths katex-rendered">c</mi>o</mi>u</mi>n</mi>t</mi></mrow><annotation encoding="application/x-tex">count</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.61508em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span></span></span></span></span>(final value) number of elements.</p>
</li>

Space complexity : <span class="maths katex-rendered">O</mi>(</mo>1</mn>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathrm">1</span>)</span></span></span></span></span>. Constant extra space is used.</p>
</li>
</ul>

<h4 id="approach-5-using-extra-list-accepted">Approach #5 Using Extra List [Accepted]</h4>
Algorithm</strong></p>
In the last approach, we updated the <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi></mrow><annotation encoding="application/x-tex">course</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span></span></span></span></span> array itself so that the first <span class="maths katex-rendered">c</mi>o</mi>u</mi>n</mi>t</mi></mrow><annotation encoding="application/x-tex">count</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.61508em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span></span></span></span></span> elements indicate the <span class="maths katex-rendered">c</mi>o</mi>u</mi>n</mi>t</mi></mrow><annotation encoding="application/x-tex">count</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.61508em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit">n</span><span class="mord mathit">t</span></span></span></span></span> number of courses that have been taken till now. If it is required to retain the <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi></mrow><annotation encoding="application/x-tex">courses</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span></span></span> array as such, we can do the same job by maintaining a separate list <span class="maths katex-rendered">v</mi>a</mi>l</mi>i</mi>d</mi>_</mi>l</mi>i</mi>s</mi>t</mi></mrow><annotation encoding="application/x-tex">valid_list</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">v</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">i</span><span class="mord mathit">d</span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">i</span><span class="mord mathit">s</span><span class="mord mathit">t</span></span></span></span></span> which is the list of those courses that have been taken till now. </p>
Thus, to find the <span class="maths katex-rendered">m</mi>a</mi>x</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">max_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.58056em; vertical-align: -0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mord mathit">x</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course, we need to search in this list only. Further, when replacing this <span class="maths katex-rendered">m</mi>a</mi>x</mi>i</mi>t</mi>h</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">max_i^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 1.10777em; vertical-align: -0.258664em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mord mathit">x</span><span class="" style="top: 0.258664em; margin-left: 0em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course with the current course, we can replace this <span class="maths katex-rendered">m</mi>a</mi>x</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">max_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.58056em; vertical-align: -0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">a</span><span class="mord mathit">x</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course in the list with current course directly. The rest of the method remains the same as the last approach.</p>
Java</strong></p>
</span>public</span> class</span> Solution</span> {</span>
    public</span> int</span> scheduleCourse</span>(</span>int</span>[][]</span> courses</span>)</span> {</span>
        Arrays</span>.</span>sort</span>(</span>courses</span>,</span> (</span>a</span>,</span> b</span>)</span> -&gt;</span> a</span>[</span>1</span>]</span> -</span> b</span>[</span>1</span>]);</span>
        List</span>&lt;</span> Integer</span> &gt;</span> valid_list</span> =</span> new</span> ArrayList</span> &lt;</span> &gt;</span> ();</span>
        int</span> time</span> =</span> 0</span>;</span>
        for</span> (</span>int</span>[]</span> c</span>:</span> courses</span>)</span> {</span>
            if</span> (</span>time</span> +</span> c</span>[</span>0</span>]</span> &lt;=</span> c</span>[</span>1</span>])</span> {</span>
                valid_list</span>.</span>add</span>(</span>c</span>[</span>0</span>]);</span>
                time</span> +=</span> c</span>[</span>0</span>];</span>
            }</span> else</span> {</span>
                int</span> max_i</span>=</span>0</span>;</span>
                for</span>(</span>int</span> i</span>=</span>1</span>;</span> i</span> &lt;</span> valid_list</span>.</span>size</span>();</span> i</span>++)</span> {</span>
                    if</span>(</span>valid_list</span>.</span>get</span>(</span>i</span>)</span> &gt;</span> valid_list</span>.</span>get</span>(</span>max_i</span>))</span>
                        max_i</span> =</span> i</span>;</span>
                }</span>
                if</span> (</span>valid_list</span>.</span>get</span>(</span>max_i</span>)</span> &gt;</span> c</span>[</span>0</span>])</span> {</span>
                    time</span> +=</span> c</span>[</span>0</span>]</span> -</span> valid_list</span>.</span>get</span>(</span>max_i</span>);</span>
                    valid_list</span>.</span>set</span>(</span>max_i</span>,</span> c</span>[</span>0</span>]);</span>
                }</span>
            }</span>
        }</span>
        return</span> valid_list</span>.</span>size</span>();</span>
    }</span>
}</span>
</pre></div>


Complexity Analysis</strong></p>


Time complexity : <span class="maths katex-rendered">O</mi>(</mo>n</mi>∗</mo>m</mi>)</mo></mrow><annotation encoding="application/x-tex">O(n*m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">n</span>∗</span><span class="mord mathit">m</span>)</span></span></span></span></span>. We iterate over a total of <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> elements of the <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi></mrow><annotation encoding="application/x-tex">courses</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span></span></span> array. For every element, we can traverse over atmost <span class="maths katex-rendered">m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span></span></span></span></span> number of elements. Here, <span class="maths katex-rendered">m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span></span></span></span></span> refers to the final length of the <span class="maths katex-rendered">v</mi>a</mi>l</mi>i</mi>d</mi>_</mi>l</mi>i</mi>s</mi>t</mi></mrow><annotation encoding="application/x-tex">valid_list</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">v</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">i</span><span class="mord mathit">d</span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">i</span><span class="mord mathit">s</span><span class="mord mathit">t</span></span></span></span></span>.</p>
</li>

Space complexity : <span class="maths katex-rendered">O</mi>(</mo>n</mi>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">n</span>)</span></span></span></span></span>. The <span class="maths katex-rendered">v</mi>a</mi>l</mi>i</mi>d</mi>_</mi>l</mi>i</mi>s</mi>t</mi></mrow><annotation encoding="application/x-tex">valid_list</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">v</span><span class="mord mathit">a</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">i</span><span class="mord mathit">d</span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">i</span><span class="mord mathit">s</span><span class="mord mathit">t</span></span></span></span></span> can contain atmost <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> courses.</p>
</li>
</ul>

<h4 id="approach-6-using-priority-queue-accepted">Approach #6 Using Priority Queue [Accepted]</h4>
Algorithm</strong></p>
This approach is inspired by <a href="http://leetcode.com/stomach_ache">@stomach_ache</a></p>
In the last few approaches, we've seen that we needed to traverse over the courses which have been taken to find the course(with the maximum duration) which can be replaced by the current course(if it can't be taken directly). These traversals can be saved, if we make use of a Priority Queue, <span class="maths katex-rendered">q</mi>u</mi>e</mi>u</mi>e</mi></mrow><annotation encoding="application/x-tex">queue</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">q</span><span class="mord mathit">u</span><span class="mord mathit">e</span><span class="mord mathit">u</span><span class="mord mathit">e</span></span></span></span></span>(which is implemented as a Max-Heap) which contains the durations of all the courses that have been taken till now. </p>
The iteration over the sorted <span class="maths katex-rendered">c</mi>o</mi>u</mi>r</mi>s</mi>e</mi>s</mi></mrow><annotation encoding="application/x-tex">courses</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">s</span><span class="mord mathit">e</span><span class="mord mathit">s</span></span></span></span></span> remains the same as in the last approaches. Whenver the current course(<span class="maths katex-rendered">i</mi>t</mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">i^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 0.849108em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course) can be taken(<span class="maths katex-rendered">(time + duration_i ≤ end_day_i)</span>), it is added to the <span class="maths katex-rendered">q</mi>u</mi>e</mi>u</mi>e</mi></mrow><annotation encoding="application/x-tex">queue</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">q</span><span class="mord mathit">u</span><span class="mord mathit">e</span><span class="mord mathit">u</span><span class="mord mathit">e</span></span></span></span></span> and the value of the current time is updated to <span class="maths katex-rendered">t</mi>i</mi>m</mi>e</mi>+</mo>d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">time + duration_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.84444em; vertical-align: -0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">m</span><span class="mord mathit">e</span>+</span><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>. </p>
If the current course can't be taken directly, as in the previous appraoches, we need to find a course whose duration <span class="maths katex-rendered">d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>j</mi></msub></mrow><annotation encoding="application/x-tex">duration_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.980548em; vertical-align: -0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight" style="margin-right: 0.05724em;">j</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> is maximum from amongst the courses taken till now. Now, since we are maintaing a Max-Heap, <span class="maths katex-rendered">q</mi>u</mi>e</mi>u</mi>e</mi></mrow><annotation encoding="application/x-tex">queue</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">q</span><span class="mord mathit">u</span><span class="mord mathit">e</span><span class="mord mathit">u</span><span class="mord mathit">e</span></span></span></span></span>, we can obtain this duration directly from this <span class="maths katex-rendered">q</mi>u</mi>e</mi>u</mi>e</mi></mrow><annotation encoding="application/x-tex">queue</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">q</span><span class="mord mathit">u</span><span class="mord mathit">e</span><span class="mord mathit">u</span><span class="mord mathit">e</span></span></span></span></span>. If the duration <span class="maths katex-rendered">d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>j</mi></msub>&gt;</mo>d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">duration_j &gt; duration_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.980548em; vertical-align: -0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight" style="margin-right: 0.05724em;">j</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>&gt;</span><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>, we can replace the <span class="maths katex-rendered">j</mi>t</mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">j^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 1.04355em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> course, with the current one. </p>
Thus, we remove the <span class="maths katex-rendered">d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>j</mi></msub></mrow><annotation encoding="application/x-tex">duration_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.980548em; vertical-align: -0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight" style="margin-right: 0.05724em;">j</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> from the <span class="maths katex-rendered">q</mi>u</mi>e</mi>u</mi>e</mi></mrow><annotation encoding="application/x-tex">queue</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">q</span><span class="mord mathit">u</span><span class="mord mathit">e</span><span class="mord mathit">u</span><span class="mord mathit">e</span></span></span></span></span> and add the current course's duration <span class="maths katex-rendered">d</mi>u</mi>r</mi>a</mi>t</mi>i</mi>o</mi>n</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">duration_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.84444em; vertical-align: -0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> to the <span class="maths katex-rendered">q</mi>u</mi>e</mi>u</mi>e</mi></mrow><annotation encoding="application/x-tex">queue</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">q</span><span class="mord mathit">u</span><span class="mord mathit">e</span><span class="mord mathit">u</span><span class="mord mathit">e</span></span></span></span></span>. We also need to make proper adjustments to the <span class="maths katex-rendered">t</mi>i</mi>m</mi>e</mi></mrow><annotation encoding="application/x-tex">time</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">m</span><span class="mord mathit">e</span></span></span></span></span> to account for this replacement done.</p>
At the end, the number of elements in the <span class="maths katex-rendered">q</mi>u</mi>e</mi>u</mi>e</mi></mrow><annotation encoding="application/x-tex">queue</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">q</span><span class="mord mathit">u</span><span class="mord mathit">e</span><span class="mord mathit">u</span><span class="mord mathit">e</span></span></span></span></span> represent the number of courses that have been taken till now.</p>
Java</strong></p>
</span>public</span> class</span> Solution</span> {</span>
    public</span> int</span> scheduleCourse</span>(</span>int</span>[][]</span> courses</span>)</span> {</span>
        Arrays</span>.</span>sort</span>(</span>courses</span>,</span> (</span>a</span>,</span> b</span>)</span> -&gt;</span> a</span>[</span>1</span>]</span> -</span> b</span>[</span>1</span>]);</span>
        PriorityQueue</span> &lt;</span> Integer</span> &gt;</span> queue</span> =</span> new</span> PriorityQueue</span> &lt;</span> &gt;</span> ((</span>a</span>,</span> b</span>)</span> -&gt;</span> b</span> -</span> a</span>);</span>
        int</span> time</span> =</span> 0</span>;</span>
        for</span> (</span>int</span>[]</span> c</span>:</span> courses</span>)</span> {</span>
            if</span> (</span>time</span> +</span> c</span>[</span>0</span>]</span> &lt;=</span> c</span>[</span>1</span>])</span> {</span>
                queue</span>.</span>offer</span>(</span>c</span>[</span>0</span>]);</span>
                time</span> +=</span> c</span>[</span>0</span>];</span>
            }</span> else</span> if</span> (!</span>queue</span>.</span>isEmpty</span>()</span> &amp;&amp;</span> queue</span>.</span>peek</span>()</span> &gt;</span> c</span>[</span>0</span>])</span> {</span>
                time</span> +=</span> c</span>[</span>0</span>]</span> -</span> queue</span>.</span>poll</span>();</span>
                queue</span>.</span>offer</span>(</span>c</span>[</span>0</span>]);</span>
            }</span>
        }</span>
        return</span> queue</span>.</span>size</span>();</span>
    }</span>
}</span>
</pre></div>


Complexity Analysis</strong></p>


Time complexity : <span class="maths katex-rendered">O</mi>(</mo>n</mi>l</mi>o</mi>g</mi>(</mo>n</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">Obig(nlog(n)big)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.85em;"></span><span class="strut bottom" style="height: 1.20001em; vertical-align: -0.35001em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span>(</span><span class="mord mathit">n</span>)</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span></span></span></span></span>. At most <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> elements are added to the <span class="maths katex-rendered">q</mi>u</mi>e</mi>u</mi>e</mi></mrow><annotation encoding="application/x-tex">queue</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">q</span><span class="mord mathit">u</span><span class="mord mathit">e</span><span class="mord mathit">u</span><span class="mord mathit">e</span></span></span></span></span>. Adding each element is followed by heapification, which takes <span class="maths katex-rendered">O</mi>(</mo>l</mi>o</mi>g</mi>(</mo>n</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">Obig(log(n)big)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.85em;"></span><span class="strut bottom" style="height: 1.20001em; vertical-align: -0.35001em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span>(</span><span class="mord mathit">n</span>)</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span></span></span></span></span> time.</p>
</li>

Space complexity : <span class="maths katex-rendered">O</mi>(</mo>n</mi>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">n</span>)</span></span></span></span></span>. The <span class="maths katex-rendered">q</mi>u</mi>e</mi>u</mi>e</mi></mrow><annotation encoding="application/x-tex">queue</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">q</span><span class="mord mathit">u</span><span class="mord mathit">e</span><span class="mord mathit">u</span><span class="mord mathit">e</span></span></span></span></span> containing the durations of the  courses taken can have atmost <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> elements</p>
</li>
</ul>

Analysis written by: <a href="https://leetcode.com/vinod23">@vinod23</a></p>