<div class="toc hide">

<a href="#solution">Solution</a>
<a href="#approach-1-brute-force-time-limit-exceeded">Approach #1 Brute Force [Time Limit Exceeded]</a></li>
<a href="#approach-2-better-brute-force-time-limit-exceeded">Approach #2 Better Brute Force [Time Limit Exceeded]</a></li>
<a href="#approach-3-using-sqrt-function-accepted">Approach #3 Using sqrt function [Accepted]</a></li>
<a href="#approach-4-using-binary-search-accepted">Approach #4 Using Binary Search [Accepted]</a></li>
<a href="#approach-5-fermat-theorem-accepted">Approach #5 Fermat Theorem [Accepted]:</a></li>
</ul>
</li>
</ul>
</div>
Solution</h2>

<h4 id="approach-1-brute-force-time-limit-exceeded">Approach #1 Brute Force [Time Limit Exceeded]</h4>
The simplest solution would be to consider every possible combination of integers <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span> and <span class="maths katex-rendered">b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span></span></span></span></span> and check if the sum of their squares equals <span class="maths katex-rendered">c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span></span></span></span></span>. Now, both <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span> and <span class="maths katex-rendered">b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span></span></span></span></span> can lie within the range <span class="maths katex-rendered">(</mo>0</mn>,</mo>c</mi></mrow></msqrt>)</mo></mrow><annotation encoding="application/x-tex">(0,sqrt{c})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.80028em;"></span><span class="strut bottom" style="height: 1.05028em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathrm">0</span>,</span><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span>)</span></span></span></span></span>. Thus, we need to check for the values of <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span> and <span class="maths katex-rendered">b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span></span></span></span></span> in this range only.</p>
Java</strong></p>
</span>public</span> class</span> Solution</span> {</span>
    public</span> boolean</span> judgeSquareSum</span>(</span>int</span> c</span>)</span> {</span>
        for</span> (</span>long</span> a</span> =</span> 0</span>;</span> a</span> *</span> a</span> &lt;=</span> c</span>;</span> a</span>++)</span> {</span>
            for</span> (</span>long</span> b</span> =</span> 0</span>;</span> b</span> *</span> b</span> &lt;=</span> c</span>;</span> b</span>++)</span> {</span>
                if</span> (</span>a</span> *</span> a</span> +</span> b</span> *</span> b</span> ==</span> c</span>)</span>
                    return</span> true</span>;</span>
            }</span>
        }</span>
        return</span> false</span>;</span>
    }</span>
}</span>
</pre></div>


Complexity Analysis</strong></p>


Time complexity : <span class="maths katex-rendered">O</mi>(</mo>c</mi>)</mo></mrow><annotation encoding="application/x-tex">O(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">c</span>)</span></span></span></span></span>. Two loops upto <span class="maths katex-rendered">c</mi></mrow></msqrt></mrow><annotation encoding="application/x-tex">sqrt{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.80028em;"></span><span class="strut bottom" style="height: 1.04em; vertical-align: -0.23972em;"></span><span class="base textstyle uncramped"><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span></span></span></span></span>. Here, <span class="maths katex-rendered">c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span></span></span></span></span> refers to the given integer(sum of squares).</p>
</li>

Space complexity : <span class="maths katex-rendered">O</mi>(</mo>1</mn>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathrm">1</span>)</span></span></span></span></span>. Constant extra space is used.</p>
</li>
</ul>

<h4 id="approach-2-better-brute-force-time-limit-exceeded">Approach #2 Better Brute Force [Time Limit Exceeded]</h4>
We can improve the last solution, if we make the following observation. For any particular <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span> chosen, the value of <span class="maths katex-rendered">b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span></span></span></span></span> required to satisfy the equation <span class="maths katex-rendered">a</mi>2</mn></msup>+</mo>b</mi>2</mn></msup>=</mo>c</mi></mrow><annotation encoding="application/x-tex">a^2 + b^2 = c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 0.897438em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>+</span><span class="mord mathit">b</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>=</span><span class="mord mathit">c</span></span></span></span></span> will be such that <span class="maths katex-rendered">b</mi>2</mn></msup>=</mo>c</mi>−</mo>a</mi>2</mn></msup></mrow><annotation encoding="application/x-tex">b^2 = c - a^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 0.897438em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>=</span><span class="mord mathit">c</span>−</span><span class="mord mathit">a</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>. Thus, we need to traverse over the range <span class="maths katex-rendered">(</mo>0</mn>,</mo>c</mi></mrow></msqrt>)</mo></mrow><annotation encoding="application/x-tex">(0, sqrt{c})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.80028em;"></span><span class="strut bottom" style="height: 1.05028em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathrm">0</span>,</span><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span>)</span></span></span></span></span> only for considering the various values of <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span>. For every current value of <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span> chosen, we can determine the corresponding <span class="maths katex-rendered">b</mi>2</mn></msup></mrow><annotation encoding="application/x-tex">b^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 0.814108em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> value and check if it is a perfect square or not. If it happens to be a perfect square, <span class="maths katex-rendered">c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span></span></span></span></span> is a sum of squares of two integers, otherwise not.</p>
Now, to determine, if the number <span class="maths katex-rendered">c</mi>−</mo>a</mi>2</mn></msup></mrow><annotation encoding="application/x-tex">c - a^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 0.897438em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span>−</span><span class="mord mathit">a</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> is a perfect square or not, we can make use of the following theorem: "The square of <span class="maths katex-rendered">n</mi>t</mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">n^{th}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.849108em;"></span><span class="strut bottom" style="height: 0.849108em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">t</span><span class="mord mathit mtight">h</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> positive integer can be represented as a sum of first <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> odd positive integers." Or in mathematical terms:</p>

<span class="maths katex-rendered">n</mi>2</mn></msup>=</mo>1</mn>+</mo>3</mn>+</mo>5</mn>+</mo>.</mi>.</mi>.</mi>+</mo>(</mo>2</mn>∗</mo>n</mi>−</mo>1</mn>)</mo>=</mo>∑</mo>1</mn></mrow>n</mi></mrow></msubsup>(</mo>2</mn>∗</mo>i</mi>−</mo>1</mn>)</mo></mrow><annotation encoding="application/x-tex">n^2 = 1 + 3 + 5 + ... + (2*n-1) = sum_{1}^{n} (2*i - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 1.11412em; vertical-align: -0.30001em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>=</span><span class="mord mathrm">1</span>+</span><span class="mord mathrm">3</span>+</span><span class="mord mathrm">5</span>+</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span>+</span>(</span><span class="mord mathrm">2</span>∗</span><span class="mord mathit">n</span>−</span><span class="mord mathrm">1</span>)</span>=</span><span class="mop op-symbol small-op" style="top: -5e-06em;">∑</span><span class="" style="top: 0.30001em; margin-left: 0em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathrm mtight">1</span></span></span></span><span class="" style="top: -0.364em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">n</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>(</span><span class="mord mathrm">2</span>∗</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>)</span></span></span></span></span>.</p>
To look at the proof of this statement, look at the L.H.S. of the above statement.</p>

<span class="maths katex-rendered">1</mn>+</mo>3</mn>+</mo>5</mn>+</mo>.</mi>.</mi>.</mi>+</mo>(</mo>2</mn>∗</mo>n</mi>−</mo>1</mn>)</mo>=</mo></mrow><annotation encoding="application/x-tex">1 + 3 + 5 + ... + (2*n-1)=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span>+</span><span class="mord mathrm">3</span>+</span><span class="mord mathrm">5</span>+</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span>+</span>(</span><span class="mord mathrm">2</span>∗</span><span class="mord mathit">n</span>−</span><span class="mord mathrm">1</span>)</span>=</span></span></span></span></span>
</p>

<span class="maths katex-rendered">(</mo>2</mn>∗</mo>1</mn>−</mo>1</mn>)</mo>+</mo>(</mo>2</mn>∗</mo>2</mn>−</mo>1</mn>)</mo>+</mo>(</mo>2</mn>∗</mo>3</mn>−</mo>1</mn>)</mo>+</mo>.</mi>.</mi>.</mi>+</mo>(</mo>2</mn>∗</mo>n</mi>−</mo>1</mn>)</mo>=</mo></mrow><annotation encoding="application/x-tex">(2*1-1) + (2*2-1) + (2*3-1) + ... + (2*n-1)=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathrm">2</span>∗</span><span class="mord mathrm">1</span>−</span><span class="mord mathrm">1</span>)</span>+</span>(</span><span class="mord mathrm">2</span>∗</span><span class="mord mathrm">2</span>−</span><span class="mord mathrm">1</span>)</span>+</span>(</span><span class="mord mathrm">2</span>∗</span><span class="mord mathrm">3</span>−</span><span class="mord mathrm">1</span>)</span>+</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span>+</span>(</span><span class="mord mathrm">2</span>∗</span><span class="mord mathit">n</span>−</span><span class="mord mathrm">1</span>)</span>=</span></span></span></span></span>
</p>

<span class="maths katex-rendered">2</mn>∗</mo>(</mo>1</mn>+</mo>2</mn>+</mo>3</mn>+</mo>.</mi>.</mi>.</mi>.</mi>+</mo>n</mi>)</mo>−</mo>(</mo>1</mn>+</mo>1</mn>+</mo>.</mi>.</mi>.</mi>n</mi>t</mi>i</mi>m</mi>e</mi>s</mi>)</mo>=</mo></mrow><annotation encoding="application/x-tex">2*(1+2+3+....+n) - (1+1+...n times)=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">2</span>∗</span>(</span><span class="mord mathrm">1</span>+</span><span class="mord mathrm">2</span>+</span><span class="mord mathrm">3</span>+</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span>+</span><span class="mord mathit">n</span>)</span>−</span>(</span><span class="mord mathrm">1</span>+</span><span class="mord mathrm">1</span>+</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathit">n</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">m</span><span class="mord mathit">e</span><span class="mord mathit">s</span>)</span>=</span></span></span></span></span>
</p>

<span class="maths katex-rendered">2</mn>∗</mo>n</mi>∗</mo>(</mo>n</mi>+</mo>1</mn>)</mo>/</mi>2</mn>−</mo>n</mi>=</mo></mrow><annotation encoding="application/x-tex">2*n*(n+1)/2 - n=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">2</span>∗</span><span class="mord mathit">n</span>∗</span>(</span><span class="mord mathit">n</span>+</span><span class="mord mathrm">1</span>)</span><span class="mord mathrm">/</span><span class="mord mathrm">2</span>−</span><span class="mord mathit">n</span>=</span></span></span></span></span>
</p>

<span class="maths katex-rendered">n</mi>∗</mo>(</mo>n</mi>+</mo>1</mn>)</mo>−</mo>n</mi>=</mo></mrow><annotation encoding="application/x-tex">n*(n+1) - n=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span>∗</span>(</span><span class="mord mathit">n</span>+</span><span class="mord mathrm">1</span>)</span>−</span><span class="mord mathit">n</span>=</span></span></span></span></span>
</p>

<span class="maths katex-rendered">n</mi>2</mn></msup>+</mo>n</mi>−</mo>n</mi>=</mo>n</mi>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2 + n - n = n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 0.897438em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>+</span><span class="mord mathit">n</span>−</span><span class="mord mathit">n</span>=</span><span class="mord mathit">n</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>
</p>
This completes the proof of the above statement.</p>
Java</strong></p>
</span>public</span> class</span> Solution</span> {</span>
    public</span> boolean</span> judgeSquareSum</span>(</span>int</span> c</span>)</span> {</span>
        for</span> (</span>long</span> a</span> =</span> 0</span>;</span> a</span> *</span> a</span> &lt;=</span> c</span>;</span> a</span>++)</span> {</span>
            int</span> b</span> =</span>  c</span> -</span> (</span>int</span>)(</span>a</span> *</span> a</span>);</span>
            int</span> i</span> =</span> 1</span>,</span> sum</span> =</span> 0</span>;</span>
            while</span> (</span>sum</span> &lt;</span> b</span>)</span> {</span>
                sum</span> +=</span> i</span>;</span>
                i</span> +=</span> 2</span>;</span>
            }</span>
            if</span> (</span>sum</span> ==</span> b</span>)</span>
                return</span> true</span>;</span>
        }</span>
        return</span> false</span>;</span>
    }</span>
}</span>
</pre></div>


Complexity Analysis</strong></p>


Time complexity : <span class="maths katex-rendered">O</mi>(</mo>c</mi>)</mo></mrow><annotation encoding="application/x-tex">O(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">c</span>)</span></span></span></span></span>. The total number of times the <span class="maths katex-rendered">s</mi>u</mi>m</mi></mrow><annotation encoding="application/x-tex">sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">s</span><span class="mord mathit">u</span><span class="mord mathit">m</span></span></span></span></span> is updated is: <span class="maths katex-rendered">1</mn>+</mo>2</mn>+</mo>3</mn>+</mo>.</mi>.</mi>.</mi>(</mo>c</mi></mrow></msqrt>t</mi>i</mi>m</mi>e</mi>s</mi>)</mo>=</mo>c</mi></mrow></msqrt>(</mo>c</mi></mrow></msqrt>+</mo>1</mn>)</mo>/</mi>2</mn>=</mo>O</mi>(</mo>c</mi>)</mo></mrow><annotation encoding="application/x-tex">1+2+3+...(sqrt{c} times) = sqrt{c}(sqrt{c}+1)/2 = O(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.80028em;"></span><span class="strut bottom" style="height: 1.05028em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span>+</span><span class="mord mathrm">2</span>+</span><span class="mord mathrm">3</span>+</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span>(</span><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">m</span><span class="mord mathit">e</span><span class="mord mathit">s</span>)</span>=</span><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span>(</span><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span>+</span><span class="mord mathrm">1</span>)</span><span class="mord mathrm">/</span><span class="mord mathrm">2</span>=</span><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">c</span>)</span></span></span></span></span>.</p>
</li>

Space complexity : <span class="maths katex-rendered">O</mi>(</mo>1</mn>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathrm">1</span>)</span></span></span></span></span>. Constant extra space is used.</p>
</li>
</ul>

<h4 id="approach-3-using-sqrt-function-accepted">Approach #3 Using sqrt function [Accepted]</h4>
Algorithm</strong></p>
Instead of finding if <span class="maths katex-rendered">c</mi>−</mo>a</mi>2</mn></msup></mrow><annotation encoding="application/x-tex">c - a^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 0.897438em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span>−</span><span class="mord mathit">a</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> is a perfect square using sum of odd numbers, as done in the last approach, we can make use of the inbuilt <span class="maths katex-rendered">s</mi>q</mi>r</mi>t</mi></mrow><annotation encoding="application/x-tex">sqrt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.61508em;"></span><span class="strut bottom" style="height: 0.80952em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">s</span><span class="mord mathit" style="margin-right: 0.03588em;">q</span><span class="mord mathit" style="margin-right: 0.02778em;">r</span><span class="mord mathit">t</span></span></span></span></span> function and check if <span class="maths katex-rendered">c</mi>−</mo>a</mi>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">sqrt{c - a^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.913389em;"></span><span class="strut bottom" style="height: 1.04em; vertical-align: -0.126611em;"></span><span class="base textstyle uncramped"><span class="mord sqrt"><span class="sqrt-sign" style="top: -0.073389em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span>−</span><span class="mord mathit">a</span><span class="" style="top: -0.289em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span><span class="" style="top: -0.833389em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span></span></span></span></span> turns out to be an integer. If it happens for any value of <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span> in the range <span class="maths katex-rendered">[</mo>0</mn>,</mo>c</mi></mrow></msqrt>]</mo></mrow><annotation encoding="application/x-tex">[0, sqrt{c}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.80028em;"></span><span class="strut bottom" style="height: 1.05028em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">[</span><span class="mord mathrm">0</span>,</span><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span>]</span></span></span></span></span>, we can return a True value immediately.</p>
Java</strong></p>
</span>public</span> class</span> Solution</span> {</span>
    public</span> boolean</span> judgeSquareSum</span>(</span>int</span> c</span>)</span> {</span>
        for</span> (</span>long</span> a</span> =</span> 0</span>;</span> a</span> *</span> a</span> &lt;=</span> c</span>;</span> a</span>++)</span> {</span>
            double</span> b</span> =</span> Math</span>.</span>sqrt</span>(</span>c</span> -</span> a</span> *</span> a</span>);</span>
            if</span> (</span>b</span> ==</span> (</span>int</span>)</span> b</span>)</span>
                return</span> true</span>;</span>
        }</span>
        return</span> false</span>;</span>
    }</span>
}</span>
</pre></div>


Complexity Analysis</strong></p>


Time complexity : <span class="maths katex-rendered">O</mi>(</mo>c</mi></mrow></msqrt>l</mi>o</mi>g</mi>(</mo>c</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">Obig(sqrt{c}log(c)big)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.85em;"></span><span class="strut bottom" style="height: 1.20001em; vertical-align: -0.35001em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span>(</span><span class="mord mathit">c</span>)</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span></span></span></span></span>. We iterate over <span class="maths katex-rendered">c</mi></mrow></msqrt></mrow><annotation encoding="application/x-tex">sqrt{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.80028em;"></span><span class="strut bottom" style="height: 1.04em; vertical-align: -0.23972em;"></span><span class="base textstyle uncramped"><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span></span></span></span></span> values for choosing <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span>. For every <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span> chosen, finding square root of <span class="maths katex-rendered">c</mi>−</mo>a</mi>2</mn></msup></mrow><annotation encoding="application/x-tex">c - a^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 0.897438em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span>−</span><span class="mord mathit">a</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> takes <span class="maths katex-rendered">O</mi>(</mo>l</mi>o</mi>g</mi>(</mo>c</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">Obig(log(c)big)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.85em;"></span><span class="strut bottom" style="height: 1.20001em; vertical-align: -0.35001em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span>(</span><span class="mord mathit">c</span>)</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span></span></span></span></span> time in the worst case.</p>
</li>

Space complexity : <span class="maths katex-rendered">O</mi>(</mo>1</mn>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathrm">1</span>)</span></span></span></span></span>. Constant extra space is used.</p>
</li>
</ul>

<h4 id="approach-4-using-binary-search-accepted">Approach #4 Using Binary Search [Accepted]</h4>
Algorithm</strong></p>
Another method to check if <span class="maths katex-rendered">c</mi>−</mo>a</mi>2</mn></msup></mrow><annotation encoding="application/x-tex">c - a^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 0.897438em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span>−</span><span class="mord mathit">a</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> is a perfect square, is by making use of Binary Search. The method remains same as that of a typical Binary Search to find a number.
The only difference lies in that we need to find an integer, <span class="maths katex-rendered">m</mi>i</mi>d</mi></mrow><annotation encoding="application/x-tex">mid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">i</span><span class="mord mathit">d</span></span></span></span></span> in the range <span class="maths katex-rendered">[</mo>0</mn>,</mo>c</mi>−</mo>a</mi>2</mn></msup>]</mo></mrow><annotation encoding="application/x-tex">[0, c - a^2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 1.06411em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">[</span><span class="mord mathrm">0</span>,</span><span class="mord mathit">c</span>−</span><span class="mord mathit">a</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>]</span></span></span></span></span>, such that this number is the square root of <span class="maths katex-rendered">c</mi>−</mo>a</mi>2</mn></msup></mrow><annotation encoding="application/x-tex">c - a^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 0.897438em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span>−</span><span class="mord mathit">a</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>.
Or in other words, we need to find an integer, <span class="maths katex-rendered">m</mi>i</mi>d</mi></mrow><annotation encoding="application/x-tex">mid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">i</span><span class="mord mathit">d</span></span></span></span></span>, in the range <span class="maths katex-rendered">[</mo>0</mn>,</mo>c</mi>−</mo>a</mi>2</mn></msup>]</mo></mrow><annotation encoding="application/x-tex">[0, c - a^2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 1.06411em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">[</span><span class="mord mathrm">0</span>,</span><span class="mord mathit">c</span>−</span><span class="mord mathit">a</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>]</span></span></span></span></span>, such that <span class="maths katex-rendered">m</mi>i</mi>d</mi></mrow><annotation encoding="application/x-tex">mid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">i</span><span class="mord mathit">d</span></span></span></span></span>x<span class="maths katex-rendered">m</mi>i</mi>d</mi>=</mo>c</mi>−</mo>a</mi>2</mn></msup></mrow><annotation encoding="application/x-tex">mid = c - a^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 0.897438em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span><span class="mord mathit">i</span><span class="mord mathit">d</span>=</span><span class="mord mathit">c</span>−</span><span class="mord mathit">a</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>.</p>
The following animation illustrates the search process for a particular value of <span class="maths katex-rendered">c</mi>−</mo>a</mi>2</mn></msup>=</mo>3</mn>6</mn></mrow><annotation encoding="application/x-tex">c - a^2 = 36</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 0.897438em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span>−</span><span class="mord mathit">a</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathrm mtight">2</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span>=</span><span class="mord mathrm">3</span><span class="mord mathrm">6</span></span></span></span></span>.</p>
<div class="diaporama" style="width: 1000px; height: 563px;"><div class="initial-play play-container"><div class="fa fa-play"></div></div></canvas></div><div class="control-panel" style="width: 940px;"><div class="control-group dia-back fa fa-step-backward"></div><div class="toggle-play control-group fa fa-play"></div><div class="control-group fa fa-step-forward"></div></div>1 / 6</div></div></div>
Java</strong></p>
</span>public</span> class</span> Solution</span> {</span>
    public</span> boolean</span> judgeSquareSum</span>(</span>int</span> c</span>)</span> {</span>
        for</span> (</span>long</span> a</span> =</span> 0</span>;</span> a</span> *</span> a</span> &lt;=</span> c</span>;</span> a</span>++)</span> {</span>
            int</span> b</span> =</span> c</span> -</span> (</span>int</span>)(</span>a</span> *</span> a</span>);</span>
            if</span> (</span>binary_search</span>(</span>0</span>,</span> b</span>,</span> b</span>))</span>
                return</span> true</span>;</span>
        }</span>
        return</span> false</span>;</span>
    }</span>
    public</span> boolean</span> binary_search</span>(</span>long</span> s</span>,</span> long</span> e</span>,</span> int</span> n</span>)</span> {</span>
        if</span> (</span>s</span> &gt;</span> e</span>)</span>
            return</span> false</span>;</span>
        long</span> mid</span> =</span> s</span> +</span> (</span>e</span> -</span> s</span>)</span> /</span> 2</span>;</span>
        if</span> (</span>mid</span> *</span> mid</span> ==</span> n</span>)</span>
            return</span> true</span>;</span>
        if</span> (</span>mid</span> *</span> mid</span> &gt;</span> n</span>)</span>
            return</span> binary_search</span>(</span>s</span>,</span> mid</span> -</span> 1</span>,</span> n</span>);</span>
        return</span> binary_search</span>(</span>mid</span> +</span> 1</span>,</span> e</span>,</span> n</span>);</span>
    }</span>
}</span>
</pre></div>


Complexity Analysis</strong></p>


Time complexity : <span class="maths katex-rendered">O</mi>(</mo>c</mi></mrow></msqrt>l</mi>o</mi>g</mi>(</mo>c</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">Obig(sqrt{c}log(c)big)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.85em;"></span><span class="strut bottom" style="height: 1.20001em; vertical-align: -0.35001em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span>(</span><span class="mord mathit">c</span>)</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span></span></span></span></span>. Binary search taking <span class="maths katex-rendered">O</mi>(</mo>l</mi>o</mi>g</mi>(</mo>c</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">Obig(log(c)big)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.85em;"></span><span class="strut bottom" style="height: 1.20001em; vertical-align: -0.35001em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span>(</span><span class="mord mathit">c</span>)</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span></span></span></span></span> in the worst case is done for <span class="maths katex-rendered">c</mi></mrow></msqrt></mrow><annotation encoding="application/x-tex">sqrt{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.80028em;"></span><span class="strut bottom" style="height: 1.04em; vertical-align: -0.23972em;"></span><span class="base textstyle uncramped"><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span></span></span></span></span> values of <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span>.</p>
</li>

Space complexity : <span class="maths katex-rendered">O</mi>(</mo>l</mi>o</mi>g</mi>(</mo>c</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">O(log(c))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span>(</span><span class="mord mathit">c</span>)</span>)</span></span></span></span></span>. Binary Search will take <span class="maths katex-rendered">O</mi>(</mo>l</mi>o</mi>g</mi>(</mo>c</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">O(log(c))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span>(</span><span class="mord mathit">c</span>)</span>)</span></span></span></span></span> space.</p>
</li>
</ul>

<h4 id="approach-5-fermat-theorem-accepted">Approach #5 Fermat Theorem [Accepted]:</h4>
Algorithm</strong></p>
This approach is based on the following statement, which is based on Fermat's Theorem:</p>
"Any positive number <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> is expressible as a sum of two squares if and only if the prime factorization of <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span>, every prime of the form <span class="maths katex-rendered">(</mo>4</mn>k</mi>+</mo>3</mn>)</mo></mrow><annotation encoding="application/x-tex">(4k+3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathrm">4</span><span class="mord mathit" style="margin-right: 0.03148em;">k</span>+</span><span class="mord mathrm">3</span>)</span></span></span></span></span> occurs an even number of times."</p>
By making use of the above theorem, we can directly find out if the given number <span class="maths katex-rendered">c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span></span></span></span></span> can be expressed as a sum of two squares.</p>
To do so we simply find all the prime factors of the given number <span class="maths katex-rendered">c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span></span></span></span></span>, which could range from <span class="maths katex-rendered">[</mo>2</mn>,</mo>c</mi></mrow></msqrt>]</mo></mrow><annotation encoding="application/x-tex">[2,sqrt{c}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.80028em;"></span><span class="strut bottom" style="height: 1.05028em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">[</span><span class="mord mathrm">2</span>,</span><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span>]</span></span></span></span></span> along with the count of those factors, by repeated division. 
If at any step, we find out that the number of occurences of any prime factor of the form <span class="maths katex-rendered">(</mo>4</mn>k</mi>+</mo>3</mn>)</mo></mrow><annotation encoding="application/x-tex">(4k+3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathrm">4</span><span class="mord mathit" style="margin-right: 0.03148em;">k</span>+</span><span class="mord mathrm">3</span>)</span></span></span></span></span> occurs an odd number of times, we can return a False value.</p>
In case, <span class="maths katex-rendered">c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span></span></span></span></span> itself is a prime number, it won't be divisible by any of the primes in the <span class="maths katex-rendered">[</mo>2</mn>,</mo>c</mi></mrow></msqrt>]</mo></mrow><annotation encoding="application/x-tex">[2,sqrt{c}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.80028em;"></span><span class="strut bottom" style="height: 1.05028em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">[</span><span class="mord mathrm">2</span>,</span><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span>]</span></span></span></span></span>. Thus, we need to check if <span class="maths katex-rendered">c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span></span></span></span></span> can be expressed in the form of
<span class="maths katex-rendered">4</mn>k</mi>+</mo>3</mn></mrow><annotation encoding="application/x-tex">4k+3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.77777em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">4</span><span class="mord mathit" style="margin-right: 0.03148em;">k</span>+</span><span class="mord mathrm">3</span></span></span></span></span>. If so, we need to return a False value, indicating that this prime occurs an odd number(1) of times. </p>
Otherwise, we can return a True value.</p>
The proof of this theorem includes the knowledge of advanced mathematics and is beyond the scope of this article. However, interested reader can refer to <a href="http://wstein.org/edu/124/lectures/lecture21/lecture21/node2.html">this</a> documentation.</p>
Java</strong></p>
</span>public</span> class</span> Solution</span> {</span>
    public</span> boolean</span> judgeSquareSum</span>(</span>int</span> c</span>)</span> {</span>
        for</span> (</span>int</span> i</span> =</span> 2</span>;</span> i</span> *</span> i</span> &lt;=</span> c</span>;</span> i</span>++)</span> {</span>
            int</span> count</span> =</span> 0</span>;</span>
            if</span> (</span>c</span> %</span> i</span> ==</span> 0</span>)</span> {</span>
                while</span> (</span>c</span> %</span> i</span> ==</span> 0</span>)</span> {</span>
                    count</span>++;</span>
                    c</span> /=</span> i</span>;</span>
                }</span>
                if</span> (</span>i</span> %</span> 4</span> ==</span> 3</span> &amp;&amp;</span> count</span> %</span> 2</span> !=</span> 0</span>)</span>
                    return</span> false</span>;</span>
            }</span>
        }</span>
        return</span> c</span> %</span> 4</span> !=</span> 3</span>;</span>
    }</span>
}</span>
</pre></div>


Complexity Analysis</strong></p>


Time complexity : <span class="maths katex-rendered">O</mi>(</mo>c</mi></mrow></msqrt>l</mi>o</mi>g</mi>(</mo>c</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">Obig(sqrt{c}log(c)big)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.85em;"></span><span class="strut bottom" style="height: 1.20001em; vertical-align: -0.35001em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span>(</span><span class="mord mathit">c</span>)</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span></span></span></span></span>. We find the factors of <span class="maths katex-rendered">c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span></span></span></span></span> and their count using repeated division. We check for the factors in the range <span class="maths katex-rendered">[</mo>0</mn>,</mo>c</mi></mrow></msqrt>]</mo></mrow><annotation encoding="application/x-tex">[0, sqrt{c}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.80028em;"></span><span class="strut bottom" style="height: 1.05028em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">[</span><span class="mord mathrm">0</span>,</span><span class="mord sqrt"><span class="sqrt-sign" style="top: 0.03972em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="" style="top: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">c</span></span></span><span class="" style="top: -0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 1em;">​</span></span>​</span></span></span>]</span></span></span></span></span>.
The maximum number of times a factor can occur(repeated division can be done) is <span class="maths katex-rendered">l</mi>o</mi>g</mi>(</mo>n</mi>)</mo></mrow><annotation encoding="application/x-tex">log(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span>(</span><span class="mord mathit">n</span>)</span></span></span></span></span>(considering 2 as the only factor, <span class="maths katex-rendered">c</mi>=</mo>2</mn>x</mi></msup></mrow><annotation encoding="application/x-tex">c=2^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.664392em;"></span><span class="strut bottom" style="height: 0.664392em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span>=</span><span class="mord mathrm">2</span><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord mathit mtight">x</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>. Thus, <span class="maths katex-rendered">x</mi>=</mo>l</mi>o</mi>g</mi>(</mo>c</mi>)</mo></mrow><annotation encoding="application/x-tex">x=log(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span>=</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span>(</span><span class="mord mathit">c</span>)</span></span></span></span></span>).</p>
</li>

Space complexity : <span class="maths katex-rendered">O</mi>(</mo>1</mn>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathrm">1</span>)</span></span></span></span></span>. Constant space is used.</p>
</li>
</ul>

Analysis written by: <a href="https://leetcode.com/vinod23">@vinod23</a></p>