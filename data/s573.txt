<div class="toc hide">

<a href="#solution">Solution</a>
<a href="#approach-using-group-by-clause-and-sub-query-accepted">Approach: Using GROUP BY clause and sub-query [Accepted]</a></li>
<a href="#approach-using-group-by-and-having-condition-accepted">Approach: Using GROUP BY and HAVING condition [Accepted]</a></li>
</ul>
</li>
</ul>
</div>
Solution</h2>

<h4 id="approach-using-group-by-clause-and-sub-query-accepted">Approach: Using GROUP BY</code> clause and sub-query</strong> [Accepted]</h4>
Intuition</strong></p>
First, we can count the student number in each class. And then select the ones have more than 5 students.</p>
Algorithm</strong></p>
To get the student number in each class. We can use GROUP BY</code> and COUNT</code>, which is very popular used to statistic bases on some character in a table.</p>
</span>SELECT</span>
    class</span>,</span> COUNT</span>(</span>DISTINCT</span> student</span>)</span>
FROM</span>
    courses</span>
GROUP</span> BY</span> class</span>
;</span>
</pre></div>



Note: We use DISTINCT</code> here since the student name may duplicated in a class as it is mentioned int he problem description.</p>
</blockquote>
</span>| class    | COUNT(student) |
|----------|----------------|
| Biology  | 1              |
| Computer | 1              |
| English  | 1              |
| Math     | 6              |
</pre></div>


To continue, we can filter the classes by taking the above query as a sub-query.</p>
</span>SELECT</span>
    class</span>
FROM</span>
    (</span>SELECT</span>
        class</span>,</span> COUNT</span>(</span>DISTINCT</span> student</span>)</span> AS</span> num</span>
    FROM</span>
        courses</span>
    GROUP</span> BY</span> class</span>)</span> AS</span> temp_table</span>
WHERE</span>
    num</span> &gt;=</span> 5</span>
;</span>
</pre></div>



Note: Make an alias of COUNT(student)</code> ('num' in this case) so that you can use in the WHERE</code> clause because it cannot be used directly over there.</p>
</blockquote>
<h4 id="approach-using-group-by-and-having-condition-accepted">Approach: Using GROUP BY</code> and HAVING</code> condition [Accepted]</h4>
Algorithm</strong></p>
Using sub-query is one way to add some condition to a GROUP BY</code> clause, however, using <a href="https://dev.mysql.com/doc/refman/5.7/en/group-by-handling.html">HAVING</code></a> is another simpler and natural approach. So we can rewrite the above solution as below.</p>
MySQL</strong></p>
</span>SELECT</span>
    class</span>
FROM</span>
    courses</span>
GROUP</span> BY</span> class</span>
HAVING</span> COUNT</span>(</span>DISTINCT</span> student</span>)</span> &gt;=</span> 5</span>
;</span>
</pre></div>