<div class="toc hide">

<a href="#solution">Solution</a>
<a href="#approach-1-using-lcmaccepted">Approach #1  Using LCM[Accepted]</a></li>
<a href="#approach-2-using-gcdaccepted">Approach #2  Using GCD[Accepted]</a></li>
</ul>
</li>
</ul>
</div>
Solution</h2>

<h4 id="approach-1-using-lcmaccepted">Approach #1  Using LCM[Accepted]</h4>
The first obvious step to be undertaken is to split the given string into individual fractions. We split the string based on +</code> and -</code> sign. We store the signs in the order in which they appear in the string in <span class="maths katex-rendered">s</mi>i</mi>g</mi>n</mi></mrow><annotation encoding="application/x-tex">sign</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">s</span><span class="mord mathit">i</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span><span class="mord mathit">n</span></span></span></span></span> array. Further, after getting the individual fractions, we further split the fractions based on /</code> sign. Thus, we obtain the individual numerator and denominator parts. We store the same in <span class="maths katex-rendered">n</mi>u</mi>m</mi></mrow><annotation encoding="application/x-tex">num</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mord mathit">u</span><span class="mord mathit">m</span></span></span></span></span> and <span class="maths katex-rendered">d</mi>e</mi>n</mi></mrow><annotation encoding="application/x-tex">den</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">e</span><span class="mord mathit">n</span></span></span></span></span> arrays respectively.</p>
Now, we've got the data ready to be worked upon. In order to see the method we've used in this implementation, we'll take an example and understand the way we work on it.</p>
Let's say, the given fraction is:</p>

<span class="maths katex-rendered">3</mn></mrow>2</mn></mrow></mfrac>+</mo>5</mn></mrow>3</mn></mrow></mfrac>−</mo>7</mn></mrow>6</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">frac{3}{2} + frac{5}{3} -frac{7}{6}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.845108em;"></span><span class="strut bottom" style="height: 1.19011em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathrm mtight">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathrm mtight">3</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span>+</span><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathrm mtight">3</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathrm mtight">5</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span>−</span><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathrm mtight">6</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathrm mtight">7</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span>
</p>
We need to equalize all the denominators so as to be able to add and subtract the numerators easily. The nearest value the denominators can be scaled upto is the LCM of all the denominators. Thus, we need to find the LCM of all the denominators and then multiply all the denominators with appropriate integer factors to make them equal to the LCM. But, in order to keep the individual fraction values unchanged, we need to multiply the individual numerators also with the same factors. </p>
In order to find the LCM, we can go as follows. We use the method <span class="maths katex-rendered">l</mi>c</mi>m</mi>(</mo>a</mi>,</mo>b</mi>,</mo>c</mi>)</mo>=</mo>l</mi>c</mi>m</mi>(</mo>l</mi>c</mi>m</mi>(</mo>a</mi>,</mo>b</mi>)</mo>,</mo>c</mi>)</mo></mrow><annotation encoding="application/x-tex">lcm(a,b,c) = lcm( lcm(a,b), c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">c</span><span class="mord mathit">m</span>(</span><span class="mord mathit">a</span>,</span><span class="mord mathit">b</span>,</span><span class="mord mathit">c</span>)</span>=</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">c</span><span class="mord mathit">m</span>(</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">c</span><span class="mord mathit">m</span>(</span><span class="mord mathit">a</span>,</span><span class="mord mathit">b</span>)</span>,</span><span class="mord mathit">c</span>)</span></span></span></span></span>. Thus, if we can compute the lcm of two denominators, we can keep on repeating the process iteratively over the denominators to get the overall lcm. To find the lcm of two numbers <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span> and <span class="maths katex-rendered">b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span></span></span></span></span>, we use <span class="maths katex-rendered">l</mi>c</mi>m</mi>(</mo>a</mi>,</mo>b</mi>)</mo>=</mo>(</mo>a</mi>∗</mo>b</mi>)</mo>/</mi>g</mi>c</mi>d</mi>(</mo>a</mi>,</mo>b</mi>)</mo></mrow><annotation encoding="application/x-tex">lcm(a,b) = (a*b)/gcd(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">c</span><span class="mord mathit">m</span>(</span><span class="mord mathit">a</span>,</span><span class="mord mathit">b</span>)</span>=</span>(</span><span class="mord mathit">a</span>∗</span><span class="mord mathit">b</span>)</span><span class="mord mathrm">/</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span><span class="mord mathit">c</span><span class="mord mathit">d</span>(</span><span class="mord mathit">a</span>,</span><span class="mord mathit">b</span>)</span></span></span></span></span>. For the above example, the <span class="maths katex-rendered">l</mi>c</mi>m</mi></mrow><annotation encoding="application/x-tex">lcm</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">c</span><span class="mord mathit">m</span></span></span></span></span> turns out to be 6.</p>
Thus, we scale up the denominators to 6 as follows:</p>

<span class="maths katex-rendered">3</mn>∗</mo>3</mn></mrow>2</mn>∗</mo>3</mn></mrow></mfrac>+</mo>5</mn>∗</mo>2</mn></mrow>3</mn>∗</mo>2</mn></mrow></mfrac>−</mo>7</mn></mrow>6</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">frac{3*3}{2*3} + frac{5*2}{3*2} -frac{7}{6}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.845108em;"></span><span class="strut bottom" style="height: 1.19011em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathrm mtight">2</span><span class="mbin mtight">∗</span><span class="mord mathrm mtight">3</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathrm mtight">3</span><span class="mbin mtight">∗</span><span class="mord mathrm mtight">3</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span>+</span><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathrm mtight">3</span><span class="mbin mtight">∗</span><span class="mord mathrm mtight">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathrm mtight">5</span><span class="mbin mtight">∗</span><span class="mord mathrm mtight">2</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span>−</span><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathrm mtight">6</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathrm mtight">7</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span>
</p>
Thus, we can observe that, the scaling factor for a fraction <span class="maths katex-rendered">n</mi>u</mi>m</mi></mrow>d</mi>e</mi>n</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">frac{num}{den}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.695392em;"></span><span class="strut bottom" style="height: 1.04039em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathit mtight">d</span><span class="mord mathit mtight">e</span><span class="mord mathit mtight">n</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">n</span><span class="mord mathit mtight">u</span><span class="mord mathit mtight">m</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span> is given by: <span class="maths katex-rendered">n</mi>u</mi>m</mi>∗</mo>x</mi></mrow>/</mi>d</mi>e</mi>n</mi>∗</mo>x</mi></mrow></mrow><annotation encoding="application/x-tex">{num*x}/{den*x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathit">n</span><span class="mord mathit">u</span><span class="mord mathit">m</span>∗</span><span class="mord mathit">x</span></span><span class="mord mathrm">/</span><span class="mord textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">e</span><span class="mord mathit">n</span>∗</span><span class="mord mathit">x</span></span></span></span></span></span>, where <span class="maths katex-rendered">x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span></span></span></span></span> is the corresponding scaling factor. Note that, <span class="maths katex-rendered">d</mi>e</mi>n</mi>∗</mo>x</mi>=</mo>l</mi>c</mi>m</mi></mrow><annotation encoding="application/x-tex">den*x=lcm</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">e</span><span class="mord mathit">n</span>∗</span><span class="mord mathit">x</span>=</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">c</span><span class="mord mathit">m</span></span></span></span></span>. Thus, <span class="maths katex-rendered">x</mi>=</mo>l</mi>c</mi>m</mi>/</mi>d</mi>e</mi>n</mi></mrow><annotation encoding="application/x-tex">x=lcm/den</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span>=</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">c</span><span class="mord mathit">m</span><span class="mord mathrm">/</span><span class="mord mathit">d</span><span class="mord mathit">e</span><span class="mord mathit">n</span></span></span></span></span>. Thus, we find out the corresponding scaling factor <span class="maths katex-rendered">x</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.58056em; vertical-align: -0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> for each fraction.</p>
After this, we can directly add or subtract the new scaled numerators.</p>
In the current example, we obtain <span class="maths katex-rendered">1</mn>2</mn></mrow>6</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">frac{12}{6}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.845108em;"></span><span class="strut bottom" style="height: 1.19011em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathrm mtight">6</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathrm mtight">1</span><span class="mord mathrm mtight">2</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span> as the result. Now, we need to convert this into an irreducible fraction. Thus, if we obtain <span class="maths katex-rendered">n</mi>u</mi>m</mi>i</mi></msub></mrow>d</mi>e</mi>n</mi>i</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">frac{num_i}{den_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.711492em;"></span><span class="strut bottom" style="height: 1.15659em; vertical-align: -0.4451em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathit mtight">d</span><span class="mord mathit mtight">e</span><span class="mord mtight"><span class="mord mathit mtight">n</span><span class="" style="top: 0.143em; margin-right: 0.0714286em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.4101em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">n</span><span class="mord mathit mtight">u</span><span class="mord mtight"><span class="mord mathit mtight">m</span><span class="" style="top: 0.143em; margin-right: 0.0714286em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span> as the final result, we need to find a largest factor <span class="maths katex-rendered">y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">y</span></span></span></span></span>, which divides both <span class="maths katex-rendered">n</mi>u</mi>m</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">num_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.58056em; vertical-align: -0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mord mathit">u</span><span class="mord mathit">m</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> and <span class="maths katex-rendered">d</mi>e</mi>n</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">den_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.84444em; vertical-align: -0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">e</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>. Such a number, as we know, is the gcd of <span class="maths katex-rendered">n</mi>u</mi>m</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">num_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.58056em; vertical-align: -0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mord mathit">u</span><span class="mord mathit">m</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span> and <span class="maths katex-rendered">d</mi>e</mi>n</mi>i</mi></msub></mrow><annotation encoding="application/x-tex">den_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.84444em; vertical-align: -0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">e</span><span class="mord mathit">n</span><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>.</p>
Thus, to convert the result <span class="maths katex-rendered">n</mi>u</mi>m</mi>i</mi></msub></mrow>d</mi>e</mi>n</mi>i</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">frac{num_i}{den_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.711492em;"></span><span class="strut bottom" style="height: 1.15659em; vertical-align: -0.4451em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathit mtight">d</span><span class="mord mathit mtight">e</span><span class="mord mtight"><span class="mord mathit mtight">n</span><span class="" style="top: 0.143em; margin-right: 0.0714286em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.4101em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">n</span><span class="mord mathit mtight">u</span><span class="mord mtight"><span class="mord mathit mtight">m</span><span class="" style="top: 0.143em; margin-right: 0.0714286em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span>, we divide both the numerator and denominator by the gcd of the two numbers <span class="maths katex-rendered">y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">y</span></span></span></span></span> to obtain the final irreducible <span class="maths katex-rendered">n</mi>u</mi>m</mi>i</mi></msub>/</mi>y</mi></mrow>d</mi>e</mi>n</mi>i</mi></msub>/</mi>y</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">frac{num_i/y}{den_i/y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 1.01em;"></span><span class="strut bottom" style="height: 1.53em; vertical-align: -0.52em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathit mtight">d</span><span class="mord mathit mtight">e</span><span class="mord mtight"><span class="mord mathit mtight">n</span><span class="" style="top: 0.143em; margin-right: 0.0714286em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span><span class="mord mathrm mtight">/</span><span class="mord mathit mtight" style="margin-right: 0.03588em;">y</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">n</span><span class="mord mathit mtight">u</span><span class="mord mtight"><span class="mord mathit mtight">m</span><span class="" style="top: 0.143em; margin-right: 0.0714286em; margin-left: 0em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped mtight"><span class="mord mathit mtight">i</span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span><span class="mord mathrm mtight">/</span><span class="mord mathit mtight" style="margin-right: 0.03588em;">y</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span>.</p>
Note: A problem with this approach is that we find the lcm of all the denominators in a single go and then reduce the overall fraction at the end. Thus, the lcm value could become very large and could lead to an overflow. But, this solution suffices for the current range of numbers.</p>
Java</strong></p>
</span>public</span> class</span> Solution</span> {</span>
    public</span> String</span> fractionAddition</span>(</span>String</span> expression</span>)</span> {</span>
        List</span> &lt;</span> Character</span> &gt;</span> sign</span> =</span> new</span> ArrayList</span> &lt;</span> &gt;</span> ();</span>
        for</span> (</span>int</span> i</span> =</span> 1</span>;</span> i</span> &lt;</span> expression</span>.</span>length</span>();</span> i</span>++)</span> {</span>
            if</span> (</span>expression</span>.</span>charAt</span>(</span>i</span>)</span> ==</span> '+'</span> ||</span> expression</span>.</span>charAt</span>(</span>i</span>)</span> ==</span> '-'</span>)</span>
                sign</span>.</span>add</span>(</span>expression</span>.</span>charAt</span>(</span>i</span>));</span>
        }</span>
        List</span> &lt;</span> Integer</span> &gt;</span> num</span> =</span> new</span> ArrayList</span> &lt;</span> &gt;</span> ();</span>
        List</span> &lt;</span> Integer</span> &gt;</span> den</span> =</span> new</span> ArrayList</span> &lt;</span> &gt;</span> ();</span>
        for</span> (</span>String</span> sub</span>:</span> expression</span>.</span>split</span>(</span>"+"</span>))</span> {</span>
            for</span> (</span>String</span> subsub</span>:</span> sub</span>.</span>split</span>(</span>"-"</span>))</span> {</span>
                if</span> (</span>subsub</span>.</span>length</span>()</span> &gt;</span> 0</span>)</span> {</span>
                    String</span>[]</span> fraction</span> =</span> subsub</span>.</span>split</span>(</span>"/"</span>);</span>
                    num</span>.</span>add</span>(</span>Integer</span>.</span>parseInt</span>(</span>fraction</span>[</span>0</span>]));</span>
                    den</span>.</span>add</span>(</span>Integer</span>.</span>parseInt</span>(</span>fraction</span>[</span>1</span>]));</span>
                }</span>
            }</span>
        }</span>
        if</span> (</span>expression</span>.</span>charAt</span>(</span>0</span>)</span> ==</span> '-'</span>)</span>
            num</span>.</span>set</span>(</span>0</span>,</span> -</span>num</span>.</span>get</span>(</span>0</span>));</span>
        int</span> lcm</span> =</span> 1</span>;</span>
        for</span> (</span>int</span> x</span>:</span> den</span>)</span> {</span>
            lcm</span> =</span> lcm_</span>(</span>lcm</span>,</span> x</span>);</span>
        }</span>

        int</span> res</span> =</span> lcm</span> /</span> den</span>.</span>get</span>(</span>0</span>)</span> *</span> num</span>.</span>get</span>(</span>0</span>);</span>
        for</span> (</span>int</span> i</span> =</span> 1</span>;</span> i</span> &lt;</span> num</span>.</span>size</span>();</span> i</span>++)</span> {</span>
            if</span> (</span>sign</span>.</span>get</span>(</span>i</span> -</span> 1</span>)</span> ==</span> '+'</span>)</span>
                res</span> +=</span> lcm</span> /</span> den</span>.</span>get</span>(</span>i</span>)</span> *</span> num</span>.</span>get</span>(</span>i</span>);</span>
            else</span>
                res</span> -=</span> lcm</span> /</span> den</span>.</span>get</span>(</span>i</span>)</span> *</span> num</span>.</span>get</span>(</span>i</span>);</span>
        }</span>
        int</span> g</span> =</span> gcd</span>(</span>Math</span>.</span>abs</span>(</span>res</span>),</span> Math</span>.</span>abs</span>(</span>lcm</span>));</span>
        return</span> (</span>res</span> /</span> g</span>)</span> +</span> "/"</span> +</span> (</span>lcm</span> /</span> g</span>);</span>
    }</span>
    public</span> int</span> lcm_</span>(</span>int</span> a</span>,</span> int</span> b</span>)</span> {</span>
        return</span> a</span> *</span> b</span> /</span> gcd</span>(</span>a</span>,</span> b</span>);</span>
    }</span>
    public</span> int</span> gcd</span>(</span>int</span> a</span>,</span> int</span> b</span>)</span> {</span>
        while</span> (</span>b</span> !=</span> 0</span>)</span> {</span>
            int</span> t</span> =</span> b</span>;</span>
            b</span> =</span> a</span> %</span> b</span>;</span>
            a</span> =</span> t</span>;</span>
        }</span>
        return</span> a</span>;</span>
    }</span>
}</span>
</pre></div>


Complexity Analysis</strong></p>


Time complexity : <span class="maths katex-rendered">O</mi>(</mo>n</mi>l</mi>o</mi>g</mi>x</mi>)</mo></mrow><annotation encoding="application/x-tex">O(nlogx)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span><span class="mord mathit">x</span>)</span></span></span></span></span>. Euclidean GCD algorithm takes <span class="maths katex-rendered">O</mi>(</mo>l</mi>o</mi>g</mi>(</mo>a</mi>.</mi>b</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">O(log(a.b))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span>(</span><span class="mord mathit">a</span><span class="mord mathrm">.</span><span class="mord mathit">b</span>)</span>)</span></span></span></span></span> time for finding gcd of two numbers <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span> and <span class="maths katex-rendered">b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span></span></span></span></span>. Here <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> refers to the number of fractions in the input string and <span class="maths katex-rendered">x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span></span></span></span></span> is the maximum possible value of denominator.</p>
</li>

Space complexity : <span class="maths katex-rendered">O</mi>(</mo>n</mi>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">n</span>)</span></span></span></span></span>. Size of <span class="maths katex-rendered">n</mi>u</mi>m</mi></mrow><annotation encoding="application/x-tex">num</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mord mathit">u</span><span class="mord mathit">m</span></span></span></span></span>, <span class="maths katex-rendered">d</mi>e</mi>n</mi></mrow><annotation encoding="application/x-tex">den</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">d</span><span class="mord mathit">e</span><span class="mord mathit">n</span></span></span></span></span> and <span class="maths katex-rendered">s</mi>i</mi>g</mi>n</mi></mrow><annotation encoding="application/x-tex">sign</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">s</span><span class="mord mathit">i</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span><span class="mord mathit">n</span></span></span></span></span> list grows upto <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span>.</p>
</li>
</ul>

<h4 id="approach-2-using-gcdaccepted">Approach #2  Using GCD[Accepted]</h4>
Algorithm</strong></p>
We know that we can continue the process of evaluating the given fractions by considering pairs of fractions at a time and continue the process considering the result obtained and the new fraction to be evaluated this time. We make use of this observation, and thus, instead of segregating the signs, numerators and denominators first, we directly start scanning the given strings and operate on the fractions obtained till now whenever a new sign is encountered.</p>
We operate on the pairs of fractions, and keep on reducing the result obtained to irreducible fractions on the way. By doing this, we can reduce the chances of the problem of potential overflow possible in case the denominators lead to a large value of lcm.</p>
We also observed from the last approach, that we need to equalize the denominators of a pair of fractions say:</p>

<span class="maths katex-rendered">a</mi></mrow>b</mi></mrow></mfrac>+</mo>c</mi></mrow>d</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">frac{a}{b} + frac{c}{d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.695392em;"></span><span class="strut bottom" style="height: 1.04039em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathit mtight">b</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">a</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span>+</span><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathit mtight">d</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">c</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span>
</p>
We used a scaling factor of <span class="maths katex-rendered">x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span></span></span></span></span> for the first fraction(both numerator and denominator). Here, <span class="maths katex-rendered">x</mi>=</mo>l</mi>c</mi>m</mi>(</mo>b</mi>,</mo>d</mi>)</mo>/</mi>b</mi></mrow><annotation encoding="application/x-tex">x=lcm(b,d)/b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span>=</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">c</span><span class="mord mathit">m</span>(</span><span class="mord mathit">b</span>,</span><span class="mord mathit">d</span>)</span><span class="mord mathrm">/</span><span class="mord mathit">b</span></span></span></span></span>. For the second fraction, the scaling factor <span class="maths katex-rendered">y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">y</span></span></span></span></span> is given by <span class="maths katex-rendered">y</mi>=</mo>l</mi>c</mi>m</mi>(</mo>b</mi>,</mo>d</mi>)</mo>/</mi>d</mi></mrow><annotation encoding="application/x-tex">y=lcm(b,d)/d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">y</span>=</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">c</span><span class="mord mathit">m</span>(</span><span class="mord mathit">b</span>,</span><span class="mord mathit">d</span>)</span><span class="mord mathrm">/</span><span class="mord mathit">d</span></span></span></span></span>. Here, $<span class="maths katex-rendered">l</mi>c</mi>m</mi>(</mo>b</mi>,</mo>d</mi>)</mo>=</mo>b</mi>∗</mo>d</mi>/</mi>g</mi>c</mi>d</mi>(</mo>b</mi>,</mo>d</mi>)</mo></mrow><annotation encoding="application/x-tex">lcm(b,d)=b*d/gcd(b,d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">c</span><span class="mord mathit">m</span>(</span><span class="mord mathit">b</span>,</span><span class="mord mathit">d</span>)</span>=</span><span class="mord mathit">b</span>∗</span><span class="mord mathit">d</span><span class="mord mathrm">/</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span><span class="mord mathit">c</span><span class="mord mathit">d</span>(</span><span class="mord mathit">b</span>,</span><span class="mord mathit">d</span>)</span></span></span></span></span>. Thus, instead of finding the lcm and then again determining the scaling factor, we can directly use: <span class="maths katex-rendered">x</mi>=</mo>(</mo>b</mi>∗</mo>d</mi>)</mo>/</mi>(</mo>g</mi>c</mi>d</mi>(</mo>b</mi>,</mo>d</mi>)</mo>∗</mo>b</mi>)</mo>=</mo>d</mi>/</mi>g</mi>c</mi>d</mi>(</mo>b</mi>,</mo>d</mi>)</mo></mrow><annotation encoding="application/x-tex">x=(b*d)/(gcd(b,d)*b) = d/gcd(b,d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span>=</span>(</span><span class="mord mathit">b</span>∗</span><span class="mord mathit">d</span>)</span><span class="mord mathrm">/</span>(</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span><span class="mord mathit">c</span><span class="mord mathit">d</span>(</span><span class="mord mathit">b</span>,</span><span class="mord mathit">d</span>)</span>∗</span><span class="mord mathit">b</span>)</span>=</span><span class="mord mathit">d</span><span class="mord mathrm">/</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span><span class="mord mathit">c</span><span class="mord mathit">d</span>(</span><span class="mord mathit">b</span>,</span><span class="mord mathit">d</span>)</span></span></span></span></span>, and <span class="maths katex-rendered">y</mi>=</mo>(</mo>b</mi>∗</mo>d</mi>)</mo>/</mi>(</mo>g</mi>c</mi>d</mi>(</mo>b</mi>,</mo>d</mi>)</mo>∗</mo>d</mi>)</mo></mrow><annotation encoding="application/x-tex">y=(b*d)/(gcd(b,d)*d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.03588em;">y</span>=</span>(</span><span class="mord mathit">b</span>∗</span><span class="mord mathit">d</span>)</span><span class="mord mathrm">/</span>(</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span><span class="mord mathit">c</span><span class="mord mathit">d</span>(</span><span class="mord mathit">b</span>,</span><span class="mord mathit">d</span>)</span>∗</span><span class="mord mathit">d</span>)</span></span></span></span></span>. Thus, we need to scale the numerators appropriately and add/subtract them in terms of pairs. The denominators are scaled in the same manner to the lcm of the two denominators involved.</p>
After evaluting every pair of fractions, we again reduce them to irreducible fractions by diving both the numerator and denominator of the resultant fraction by the gcd of the two.</p>
Java</strong></p>
</span>public</span> class</span> Solution</span> {</span>
    public</span> String</span> fractionAddition</span>(</span>String</span> expression</span>)</span> {</span>
        List</span> &lt;</span> Character</span> &gt;</span> sign</span> =</span> new</span> ArrayList</span> &lt;</span> &gt;</span> ();</span>
        if</span> (</span>expression</span>.</span>charAt</span>(</span>0</span>)</span> !=</span> '-'</span>)</span>
            sign</span>.</span>add</span>(</span>'+'</span>);</span>
        for</span> (</span>int</span> i</span> =</span> 0</span>;</span> i</span> &lt;</span> expression</span>.</span>length</span>();</span> i</span>++)</span> {</span>
            if</span> (</span>expression</span>.</span>charAt</span>(</span>i</span>)</span> ==</span> '+'</span> ||</span> expression</span>.</span>charAt</span>(</span>i</span>)</span> ==</span> '-'</span>)</span>
                sign</span>.</span>add</span>(</span>expression</span>.</span>charAt</span>(</span>i</span>));</span>
        }</span>
        int</span> prev_num</span> =</span> 0</span>,</span> prev_den</span> =</span> 1</span>,</span> i</span> =</span> 0</span>;</span>
        for</span> (</span>String</span> sub</span>:</span> expression</span>.</span>split</span>(</span>"(+)|(-)"</span>))</span> {</span>
            if</span> (</span>sub</span>.</span>length</span>()</span> &gt;</span> 0</span>)</span> {</span>
                String</span>[]</span> fraction</span> =</span> sub</span>.</span>split</span>(</span>"/"</span>);</span>
                int</span> num</span> =</span> (</span>Integer</span>.</span>parseInt</span>(</span>fraction</span>[</span>0</span>]));</span>
                int</span> den</span> =</span> (</span>Integer</span>.</span>parseInt</span>(</span>fraction</span>[</span>1</span>]));</span>
                int</span> g</span> =</span> Math</span>.</span>abs</span>(</span>gcd</span>(</span>den</span>,</span> prev_den</span>));</span>
                if</span> (</span>sign</span>.</span>get</span>(</span>i</span>++)</span> ==</span> '+'</span>)</span>
                    prev_num</span> =</span> prev_num</span> *</span> den</span> /</span> g</span> +</span> num</span> *</span> prev_den</span> /</span> g</span>;</span>
                else</span>
                    prev_num</span> =</span> prev_num</span> *</span> den</span> /</span> g</span> -</span> num</span> *</span> prev_den</span> /</span> g</span>;</span>
                prev_den</span> =</span> den</span> *</span> prev_den</span> /</span> g</span>;</span>
                g</span> =</span> Math</span>.</span>abs</span>(</span>gcd</span>(</span>prev_den</span>,</span> prev_num</span>));</span>
                prev_num</span> /=</span> g</span>;</span>
                prev_den</span> /=</span> g</span>;</span>
            }</span>
        }</span>
        return</span> prev_num</span> +</span> "/"</span> +</span> prev_den</span>;</span>
    }</span>
    public</span> int</span> gcd</span>(</span>int</span> a</span>,</span> int</span> b</span>)</span> {</span>
        while</span> (</span>b</span> !=</span> 0</span>)</span> {</span>
            int</span> t</span> =</span> b</span>;</span>
            b</span> =</span> a</span> %</span> b</span>;</span>
            a</span> =</span> t</span>;</span>
        }</span>
        return</span> a</span>;</span>
    }</span>
}</span>
</pre></div>


Complexity Analysis</strong></p>


Time complexity : <span class="maths katex-rendered">O</mi>(</mo>n</mi>l</mi>o</mi>g</mi>x</mi>)</mo></mrow><annotation encoding="application/x-tex">O(nlogx)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span><span class="mord mathit">x</span>)</span></span></span></span></span>. Euclidean GCD algorithm takes <span class="maths katex-rendered">O</mi>(</mo>l</mi>o</mi>g</mi>(</mo>a</mi>.</mi>b</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">O(log(a.b))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span>(</span><span class="mord mathit">a</span><span class="mord mathrm">.</span><span class="mord mathit">b</span>)</span>)</span></span></span></span></span> time for finding gcd of two numbers <span class="maths katex-rendered">a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span></span></span></span></span> and <span class="maths katex-rendered">b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">b</span></span></span></span></span>. Here <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> refers to the number of fractions in the input string and <span class="maths katex-rendered">x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span></span></span></span></span> is the maximum possible value of denominator.</p>
</li>

Space complexity : <span class="maths katex-rendered">O</mi>(</mo>n</mi>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathit">n</span>)</span></span></span></span></span>. Size of <span class="maths katex-rendered">s</mi>i</mi>g</mi>n</mi></mrow><annotation encoding="application/x-tex">sign</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">s</span><span class="mord mathit">i</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span><span class="mord mathit">n</span></span></span></span></span> list grows upto <span class="maths katex-rendered">n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span>.</p>
</li>
</ul>

Analysis written by: <a href="https://leetcode.com/vinod23">@vinod23</a></p>