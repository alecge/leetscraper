<div class="toc hide">

<a href="#solution">Solution</a>
<a href="#approach-1-recursive-approach-accepted">Approach #1 Recursive Approach [Accepted]</a></li>
</ul>
</li>
</ul>
</div>
Solution</h2>

<h4 id="approach-1-recursive-approach-accepted">Approach #1 Recursive Approach [Accepted]</h4>
To solve this problem, we need to understand "What is the use of median". In statistics, the median is used for:</p>

Dividing a set into two equal length subsets, that one subset is always greater than the other.</p>
</blockquote>
If we understand the use of median for dividing, we are very close to the answer.</p>
First let's cut <span class="maths katex-rendered">A</mi></mtext></mrow><annotation encoding="application/x-tex">text{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.68333em;"></span><span class="strut bottom" style="height: 0.68333em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span></span></span></span></span> into two parts at a random position <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span>:</p>
</span>          left_A             |        right_A
    A[0], A[1], ..., A[i-1]  |  A[i], A[i+1], ..., A[m-1]
</pre></div>


Since <span class="maths katex-rendered">A</mi></mtext></mrow><annotation encoding="application/x-tex">text{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.68333em;"></span><span class="strut bottom" style="height: 0.68333em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span></span></span></span></span> has <span class="maths katex-rendered">m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span></span></span></span></span> elements, so there are <span class="maths katex-rendered">m</mi>+</mo>1</mn></mrow><annotation encoding="application/x-tex">m+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.72777em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span>+</span><span class="mord mathrm">1</span></span></span></span></span> kinds of cutting (<span class="maths katex-rendered">i</mi>=</mo>0</mn>∼</mo>m</mi></mrow><annotation encoding="application/x-tex">i = 0 sim m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span>=</span><span class="mord mathrm">0</span>∼</span><span class="mord mathit">m</span></span></span></span></span>).</p>
And we know:</p>


<span class="maths katex-rendered">l</mi>e</mi>n</mi></mtext>(</mo>l</mi>e</mi>f</mi>t</mi>_</mi>A</mi></mtext>)</mo>=</mo>i</mi>,</mo>l</mi>e</mi>n</mi></mtext>(</mo>r</mi>i</mi>g</mi>h</mi>t</mi>_</mi>A</mi></mtext>)</mo>=</mo>m</mi>−</mo>i</mi></mrow><annotation encoding="application/x-tex">text{len}(text{left_A}) = i, text{len}(text{right_A}) = m - i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1.06em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">len</span></span>(</span><span class="mord text textstyle uncramped"><span class="mord mathrm">left_A</span></span>)</span>=</span><span class="mord mathit">i</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">len</span></span>(</span><span class="mord text textstyle uncramped"><span class="mord mathrm">right_A</span></span>)</span>=</span><span class="mord mathit">m</span>−</span><span class="mord mathit">i</span></span></span></span></span>.</p>
Note: when <span class="maths katex-rendered">i</mi>=</mo>0</mn></mrow><annotation encoding="application/x-tex">i = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span>=</span><span class="mord mathrm">0</span></span></span></span></span>, <span class="maths katex-rendered">l</mi>e</mi>f</mi>t</mi>_</mi>A</mi></mtext></mrow><annotation encoding="application/x-tex">text{left_A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">left_A</span></span></span></span></span></span> is empty, and when <span class="maths katex-rendered">i</mi>=</mo>m</mi></mrow><annotation encoding="application/x-tex">i = m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span>=</span><span class="mord mathit">m</span></span></span></span></span>, <span class="maths katex-rendered">r</mi>i</mi>g</mi>h</mi>t</mi>_</mi>A</mi></mtext></mrow><annotation encoding="application/x-tex">text{right_A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">right_A</span></span></span></span></span></span> is empty.</p>
</blockquote>
With the same way, cut <span class="maths katex-rendered">B</mi></mtext></mrow><annotation encoding="application/x-tex">text{B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.68333em;"></span><span class="strut bottom" style="height: 0.68333em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span></span></span></span></span> into two parts at a random position <span class="maths katex-rendered">j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span></span></span></span></span>:</p>
</span>          left_B             |        right_B
    B[0], B[1], ..., B[j-1]  |  B[j], B[j+1], ..., B[n-1]
</pre></div>


Put <span class="maths katex-rendered">l</mi>e</mi>f</mi>t</mi>_</mi>A</mi></mtext></mrow><annotation encoding="application/x-tex">text{left_A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">left_A</span></span></span></span></span></span> and <span class="maths katex-rendered">l</mi>e</mi>f</mi>t</mi>_</mi>B</mi></mtext></mrow><annotation encoding="application/x-tex">text{left_B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">left_B</span></span></span></span></span></span> into one set, and put <span class="maths katex-rendered">r</mi>i</mi>g</mi>h</mi>t</mi>_</mi>A</mi></mtext></mrow><annotation encoding="application/x-tex">text{right_A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">right_A</span></span></span></span></span></span> and <span class="maths katex-rendered">r</mi>i</mi>g</mi>h</mi>t</mi>_</mi>B</mi></mtext></mrow><annotation encoding="application/x-tex">text{right_B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">right_B</span></span></span></span></span></span> into another set. Let's name them <span class="maths katex-rendered">l</mi>e</mi>f</mi>t</mi>_</mi>p</mi>a</mi>r</mi>t</mi></mtext></mrow><annotation encoding="application/x-tex">text{left_part}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">left_part</span></span></span></span></span></span> and <span class="maths katex-rendered">r</mi>i</mi>g</mi>h</mi>t</mi>_</mi>p</mi>a</mi>r</mi>t</mi></mtext></mrow><annotation encoding="application/x-tex">text{right_part}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 1.00444em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">right_part</span></span></span></span></span></span>:</p>
</span>          left_part          |        right_part
    A[0], A[1], ..., A[i-1]  |  A[i], A[i+1], ..., A[m-1]
    B[0], B[1], ..., B[j-1]  |  B[j], B[j+1], ..., B[n-1]
</pre></div>


If we can ensure:</p>



<span class="maths katex-rendered">l</mi>e</mi>n</mi></mtext>(</mo>l</mi>e</mi>f</mi>t</mi>_</mi>p</mi>a</mi>r</mi>t</mi></mtext>)</mo>=</mo>l</mi>e</mi>n</mi></mtext>(</mo>r</mi>i</mi>g</mi>h</mi>t</mi>_</mi>p</mi>a</mi>r</mi>t</mi></mtext>)</mo></mrow><annotation encoding="application/x-tex">text{len}(text{left_part}) = text{len}(text{right_part})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1.06em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">len</span></span>(</span><span class="mord text textstyle uncramped"><span class="mord mathrm">left_part</span></span>)</span>=</span><span class="mord text textstyle uncramped"><span class="mord mathrm">len</span></span>(</span><span class="mord text textstyle uncramped"><span class="mord mathrm">right_part</span></span>)</span></span></span></span></span>
</li>

<span class="maths katex-rendered">max</mi>(</mo>l</mi>e</mi>f</mi>t</mi>_</mi>p</mi>a</mi>r</mi>t</mi></mtext>)</mo>≤</mo>min</mi>(</mo>r</mi>i</mi>g</mi>h</mi>t</mi>_</mi>p</mi>a</mi>r</mi>t</mi></mtext>)</mo></mrow><annotation encoding="application/x-tex">max(text{left_part}) leq min(text{right_part})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1.06em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped">max</span>(</span><span class="mord text textstyle uncramped"><span class="mord mathrm">left_part</span></span>)</span>≤</span>min</span>(</span><span class="mord text textstyle uncramped"><span class="mord mathrm">right_part</span></span>)</span></span></span></span></span>
</li>
</ol>
</blockquote>
then we divide all elements in <span class="maths katex-rendered">{</mo>A</mi></mtext>,</mo>B</mi></mtext>}</mo></mrow><annotation encoding="application/x-tex">{text{A}, text{B}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">{</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>}</span></span></span></span></span> into two parts with equal length, and one part is always greater than the other. Then</p>

<p class="maths katex-rendered">m</mi>e</mi>d</mi>i</mi>a</mi>n</mi></mtext>=</mo>m</mi>a</mi>x</mi></mtext>(</mo>l</mi>e</mi>f</mi>t</mi></mtext>_</mi>p</mi>a</mi>r</mi>t</mi></mtext>)</mo>+</mo>m</mi>i</mi>n</mi></mtext>(</mo>r</mi>i</mi>g</mi>h</mi>t</mi></mtext>_</mi>p</mi>a</mi>r</mi>t</mi></mtext>)</mo></mrow>2</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">
text{median} = frac{text{max}(text{left}_text{part}) + text{min}(text{right}_text{part})}{2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 1.45em;"></span><span class="strut bottom" style="height: 2.136em; vertical-align: -0.686em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord text displaystyle textstyle uncramped"><span class="mord mathrm">median</span></span>=</span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.7em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">max</span></span>(</span><span class="mord text textstyle uncramped"><span class="mord mathrm">left</span></span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord text textstyle uncramped"><span class="mord mathrm">part</span></span>)</span>+</span><span class="mord text textstyle uncramped"><span class="mord mathrm">min</span></span>(</span><span class="mord text textstyle uncramped"><span class="mord mathrm">right</span></span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord text textstyle uncramped"><span class="mord mathrm">part</span></span>)</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span></p>
</p>
To ensure these two conditions, we just need to ensure:</p>




<span class="maths katex-rendered">i</mi>+</mo>j</mi>=</mo>m</mi>−</mo>i</mi>+</mo>n</mi>−</mo>j</mi></mrow><annotation encoding="application/x-tex">i + j = m - i + n - j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span>+</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>=</span><span class="mord mathit">m</span>−</span><span class="mord mathit">i</span>+</span><span class="mord mathit">n</span>−</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span></span></span></span></span> (or: <span class="maths katex-rendered">m</mi>−</mo>i</mi>+</mo>n</mi>−</mo>j</mi>+</mo>1</mn></mrow><annotation encoding="application/x-tex">m - i + n - j + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span>−</span><span class="mord mathit">i</span>+</span><span class="mord mathit">n</span>−</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>+</span><span class="mord mathrm">1</span></span></span></span></span>)
  if <span class="maths katex-rendered">n</mi>≥</mo>m</mi></mrow><annotation encoding="application/x-tex">n geq m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.63597em;"></span><span class="strut bottom" style="height: 0.77194em; vertical-align: -0.13597em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span>≥</span><span class="mord mathit">m</span></span></span></span></span>, we just need to set:  <span class="maths katex-rendered">  i = 0 sim m,  j = frac{m + n + 1}{2} - i </span><script type="math/tex">  i = 0 sim m,  j = frac{m + n + 1}{2} - i </script></span>
</p>
</li>


<span class="maths katex-rendered">B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>≤</mo>A</mi></mtext>[</mo>i</mi>]</mo></mrow><annotation encoding="application/x-tex">text{B}[j-1] leq text{A}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span></span></span></span></span> and <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>≤</mo>B</mi></mtext>[</mo>j</mi>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i-1] leq text{B}[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span></span></span></span></span>
</p>
</li>
</ol>
</blockquote>
ps.1 For simplicity, I presume <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>,</mo>B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>,</mo>A</mi></mtext>[</mo>i</mi>]</mo>,</mo>B</mi></mtext>[</mo>j</mi>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i-1], text{B}[j-1], text{A}[i], text{B}[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span></span></span></span></span> are always valid even if <span class="maths katex-rendered">i</mi>=</mo>0</mn></mrow><annotation encoding="application/x-tex">i=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span>=</span><span class="mord mathrm">0</span></span></span></span></span>, <span class="maths katex-rendered">i</mi>=</mo>m</mi></mrow><annotation encoding="application/x-tex">i=m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span>=</span><span class="mord mathit">m</span></span></span></span></span>, <span class="maths katex-rendered">j</mi>=</mo>0</mn></mrow><annotation encoding="application/x-tex">j=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span>=</span><span class="mord mathrm">0</span></span></span></span></span>, or <span class="maths katex-rendered">j</mi>=</mo>n</mi></mrow><annotation encoding="application/x-tex">j=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span>=</span><span class="mord mathit">n</span></span></span></span></span>.
I will talk about how to deal with these edge values at last.</p>
ps.2 Why <span class="maths katex-rendered">n</mi>≥</mo>m</mi></mrow><annotation encoding="application/x-tex">n geq m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.63597em;"></span><span class="strut bottom" style="height: 0.77194em; vertical-align: -0.13597em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span>≥</span><span class="mord mathit">m</span></span></span></span></span>? Because I have to make sure <span class="maths katex-rendered">j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span></span></span></span></span> is non-negative since <span class="maths katex-rendered">0</mn>≤</mo>i</mi>≤</mo>m</mi></mrow><annotation encoding="application/x-tex">0 leq i leq m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.79549em; vertical-align: -0.13597em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">0</span>≤</span><span class="mord mathit">i</span>≤</span><span class="mord mathit">m</span></span></span></span></span> and <span class="maths katex-rendered">j</mi>=</mo>m</mi>+</mo>n</mi>+</mo>1</mn></mrow>2</mn></mrow></mfrac>−</mo>i</mi></mrow><annotation encoding="application/x-tex">j = frac{m + n + 1}{2} - i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.845108em;"></span><span class="strut bottom" style="height: 1.19011em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span>=</span><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathrm mtight">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">m</span><span class="mbin mtight">+</span><span class="mord mathit mtight">n</span><span class="mbin mtight">+</span><span class="mord mathrm mtight">1</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span>−</span><span class="mord mathit">i</span></span></span></span></span>. If <span class="maths katex-rendered">n</mi>&lt;</mo>m</mi></mrow><annotation encoding="application/x-tex">n &lt; m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.5391em;"></span><span class="strut bottom" style="height: 0.5782em; vertical-align: -0.0391em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span>&lt;</span><span class="mord mathit">m</span></span></span></span></span>, then <span class="maths katex-rendered">j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span></span></span></span></span> may be negative, that will lead to wrong result.</p>
So, all we need to do is:</p>

Searching <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span> in <span class="maths katex-rendered">[</mo>0</mn>,</mo>m</mi>]</mo></mrow><annotation encoding="application/x-tex">[0, m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">[</span><span class="mord mathrm">0</span>,</span><span class="mord mathit">m</span>]</span></span></span></span></span>, to find an object <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span> such that:</p>

<span class="maths katex-rendered"></mspace>B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>≤</mo>A</mi></mtext>[</mo>i</mi>]</mo>&nbsp;</mtext></mrow><annotation encoding="application/x-tex">qquad text{B}[j-1] leq text{A}[i] </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mspace qquad"></span><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span>&nbsp;</span></span></span></span></span> and <span class="maths katex-rendered">&nbsp;</mtext>A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>≤</mo>B</mi></mtext>[</mo>j</mi>]</mo>,</mo>&nbsp;</mtext></mrow><annotation encoding="application/x-tex"> text{A}[i-1] leq text{B}[j], </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped">&nbsp;</span><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span>,</span>&nbsp;</span></span></span></span></span> where <span class="maths katex-rendered">j</mi>=</mo>m</mi>+</mo>n</mi>+</mo>1</mn></mrow>2</mn></mrow></mfrac>−</mo>i</mi></mrow><annotation encoding="application/x-tex">j = frac{m + n + 1}{2} - i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.845108em;"></span><span class="strut bottom" style="height: 1.19011em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span>=</span><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathrm mtight">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">m</span><span class="mbin mtight">+</span><span class="mord mathit mtight">n</span><span class="mbin mtight">+</span><span class="mord mathrm mtight">1</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span>−</span><span class="mord mathit">i</span></span></span></span></span>
</p>
</blockquote>
And we can do a binary search following steps described below:</p>

Set <span class="maths katex-rendered">i</mi>m</mi>i</mi>n</mi></mtext>=</mo>0</mn></mrow><annotation encoding="application/x-tex">text{imin} = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.66786em;"></span><span class="strut bottom" style="height: 0.66786em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">imin</span></span>=</span><span class="mord mathrm">0</span></span></span></span></span>, <span class="maths katex-rendered">i</mi>m</mi>a</mi>x</mi></mtext>=</mo>m</mi></mrow><annotation encoding="application/x-tex">text{imax} = m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.66786em;"></span><span class="strut bottom" style="height: 0.66786em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">imax</span></span>=</span><span class="mord mathit">m</span></span></span></span></span>, then start searching in <span class="maths katex-rendered">[</mo>i</mi>m</mi>i</mi>n</mi></mtext>,</mo>i</mi>m</mi>a</mi>x</mi></mtext>]</mo></mrow><annotation encoding="application/x-tex">[text{imin}, text{imax}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">[</span><span class="mord text textstyle uncramped"><span class="mord mathrm">imin</span></span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">imax</span></span>]</span></span></span></span></span>
</li>
Set <span class="maths katex-rendered">i</mi>=</mo>i</mi>m</mi>i</mi>n</mi></mtext>+</mo>i</mi>m</mi>a</mi>x</mi></mtext></mrow>2</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">i = frac{text{imin} + text{imax}}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.861502em;"></span><span class="strut bottom" style="height: 1.2065em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span>=</span><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathrm mtight">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord text scriptstyle uncramped mtight"><span class="mord mathrm mtight">imin</span></span><span class="mbin mtight">+</span><span class="mord text scriptstyle uncramped mtight"><span class="mord mathrm mtight">imax</span></span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span>, <span class="maths katex-rendered">j</mi>=</mo>m</mi>+</mo>n</mi>+</mo>1</mn></mrow>2</mn></mrow></mfrac>−</mo>i</mi></mrow><annotation encoding="application/x-tex">j = frac{m + n + 1}{2} - i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.845108em;"></span><span class="strut bottom" style="height: 1.19011em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span>=</span><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathrm mtight">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">m</span><span class="mbin mtight">+</span><span class="mord mathit mtight">n</span><span class="mbin mtight">+</span><span class="mord mathrm mtight">1</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span>−</span><span class="mord mathit">i</span></span></span></span></span>
</li>

Now we have <span class="maths katex-rendered">l</mi>e</mi>n</mi></mtext>(</mo>l</mi>e</mi>f</mi>t</mi></mtext>_</mi>p</mi>a</mi>r</mi>t</mi></mtext>)</mo>=</mo>l</mi>e</mi>n</mi></mtext>(</mo>r</mi>i</mi>g</mi>h</mi>t</mi></mtext>_</mi>p</mi>a</mi>r</mi>t</mi></mtext>)</mo></mrow><annotation encoding="application/x-tex">text{len}(text{left}_text{part})=text{len}(text{right}_text{part})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1.06em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">len</span></span>(</span><span class="mord text textstyle uncramped"><span class="mord mathrm">left</span></span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord text textstyle uncramped"><span class="mord mathrm">part</span></span>)</span>=</span><span class="mord text textstyle uncramped"><span class="mord mathrm">len</span></span>(</span><span class="mord text textstyle uncramped"><span class="mord mathrm">right</span></span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord text textstyle uncramped"><span class="mord mathrm">part</span></span>)</span></span></span></span></span>. And there are only 3 situations that we may encounter:  </p>



<span class="maths katex-rendered">B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>≤</mo>A</mi></mtext>[</mo>i</mi>]</mo></mrow><annotation encoding="application/x-tex">text{B}[j-1] leq text{A}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span></span></span></span></span> and <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>≤</mo>B</mi></mtext>[</mo>j</mi>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i-1] leq text{B}[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span></span></span></span></span>

  Means we have found the object <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span>, so stop searching.  </p>
</li>


<span class="maths katex-rendered">B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>&gt;</mo>A</mi></mtext>[</mo>i</mi>]</mo></mrow><annotation encoding="application/x-tex">text{B}[j-1] &gt; text{A}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>&gt;</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span></span></span></span></span>

  Means <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span></span></span></span></span> is too small. We must adjust <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span> to get <span class="maths katex-rendered">B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>≤</mo>A</mi></mtext>[</mo>i</mi>]</mo></mrow><annotation encoding="application/x-tex">text{B}[j-1] leq text{A}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span></span></span></span></span>.
  Can we increase <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span>?
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Yes. Because when <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span> is increased, <span class="maths katex-rendered">j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span></span></span></span></span> will be decreased.
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;So <span class="maths katex-rendered">B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo></mrow><annotation encoding="application/x-tex">text{B}[j-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span></span></span></span></span> is decreased and <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span></span></span></span></span> is increased, and <span class="maths katex-rendered">B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>≤</mo>A</mi></mtext>[</mo>i</mi>]</mo></mrow><annotation encoding="application/x-tex">text{B}[j-1] leq text{A}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span></span></span></span></span> may
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;be satisfied.
  Can we decrease <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span>?
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;No! Because when <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span> is decreased, <span class="maths katex-rendered">j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span></span></span></span></span> will be increased.
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;So <span class="maths katex-rendered">B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo></mrow><annotation encoding="application/x-tex">text{B}[j-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span></span></span></span></span> is increased and <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span></span></span></span></span> is decreased, and <span class="maths katex-rendered">B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>≤</mo>A</mi></mtext>[</mo>i</mi>]</mo></mrow><annotation encoding="application/x-tex">text{B}[j-1] leq text{A}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span></span></span></span></span> will
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;be never satisfied.
  So we must increase <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span>. That is, we must adjust the searching range to <span class="maths katex-rendered">[</mo>i</mi>+</mo>1</mn>,</mo>i</mi>m</mi>a</mi>x</mi></mtext>]</mo></mrow><annotation encoding="application/x-tex">[i+1, text{imax}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">[</span><span class="mord mathit">i</span>+</span><span class="mord mathrm">1</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">imax</span></span>]</span></span></span></span></span>.
  So, set <span class="maths katex-rendered">i</mi>m</mi>i</mi>n</mi></mtext>=</mo>i</mi>+</mo>1</mn></mrow><annotation encoding="application/x-tex">text{imin} = i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.66786em;"></span><span class="strut bottom" style="height: 0.75119em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">imin</span></span>=</span><span class="mord mathit">i</span>+</span><span class="mord mathrm">1</span></span></span></span></span>, and goto 2.</p>
</li>


<span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>&gt;</mo>B</mi></mtext>[</mo>j</mi>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i-1] &gt; text{B}[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>&gt;</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span></span></span></span></span>:
  Means <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span></span></span></span></span> is too big. And we must decrease <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span> to get   <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>≤</mo>B</mi></mtext>[</mo>j</mi>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i-1]leq text{B}[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span></span></span></span></span>.
  That is, we must adjust the searching range to <span class="maths katex-rendered">[</mo>i</mi>m</mi>i</mi>n</mi></mtext>,</mo>i</mi>−</mo>1</mn>]</mo></mrow><annotation encoding="application/x-tex">[text{imin}, i-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">[</span><span class="mord text textstyle uncramped"><span class="mord mathrm">imin</span></span>,</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span></span></span></span></span>.
  So, set <span class="maths katex-rendered">i</mi>m</mi>a</mi>x</mi></mtext>=</mo>i</mi>−</mo>1</mn></mrow><annotation encoding="application/x-tex">text{imax} = i-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.66786em;"></span><span class="strut bottom" style="height: 0.75119em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">imax</span></span>=</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span></span></span></span></span>, and goto 2.</p>
</li>
</ul>
</li>
</ol>
When the object <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span> is found, the median is:</p>


<span class="maths katex-rendered">max</mi>(</mo>A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>,</mo>B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>)</mo>,</mo>&nbsp;</mtext></mrow><annotation encoding="application/x-tex">max(text{A}[i-1], text{B}[j-1]),  </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">max</span>(</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>)</span>,</span>&nbsp;</span></span></span></span></span> when <span class="maths katex-rendered">m</mi>+</mo>n</mi></mrow><annotation encoding="application/x-tex">m + n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.58333em;"></span><span class="strut bottom" style="height: 0.66666em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span>+</span><span class="mord mathit">n</span></span></span></span></span> is odd</p>

<span class="maths katex-rendered">max</mi>(</mo>A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>,</mo>B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>)</mo>+</mo>min</mi>(</mo>A</mi></mtext>[</mo>i</mi>]</mo>,</mo>B</mi></mtext>[</mo>j</mi>]</mo>)</mo></mrow>2</mn></mrow></mfrac>,</mo>&nbsp;</mtext></mrow><annotation encoding="application/x-tex">frac{max(text{A}[i-1], text{B}[j-1]) + min(text{A}[i], text{B}[j])}{2},  </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 1.01em;"></span><span class="strut bottom" style="height: 1.355em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathrm mtight">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mop mtight">max</span><span class="mopen mtight">(</span><span class="mord text scriptstyle uncramped mtight"><span class="mord mathrm mtight">A</span></span><span class="mopen mtight">[</span><span class="mord mathit mtight">i</span><span class="mbin mtight">−</span><span class="mord mathrm mtight">1</span><span class="mclose mtight">]</span><span class="mpunct mtight">,</span><span class="mord text scriptstyle uncramped mtight"><span class="mord mathrm mtight">B</span></span><span class="mopen mtight">[</span><span class="mord mathit mtight" style="margin-right: 0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mathrm mtight">1</span><span class="mclose mtight">]</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mop mtight">min</span><span class="mopen mtight">(</span><span class="mord text scriptstyle uncramped mtight"><span class="mord mathrm mtight">A</span></span><span class="mopen mtight">[</span><span class="mord mathit mtight">i</span><span class="mclose mtight">]</span><span class="mpunct mtight">,</span><span class="mord text scriptstyle uncramped mtight"><span class="mord mathrm mtight">B</span></span><span class="mopen mtight">[</span><span class="mord mathit mtight" style="margin-right: 0.05724em;">j</span><span class="mclose mtight">]</span><span class="mclose mtight">)</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span>,</span>&nbsp;</span></span></span></span></span> when <span class="maths katex-rendered">m</mi>+</mo>n</mi></mrow><annotation encoding="application/x-tex">m + n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.58333em;"></span><span class="strut bottom" style="height: 0.66666em; vertical-align: -0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span>+</span><span class="mord mathit">n</span></span></span></span></span> is even</p>
</blockquote>
Now let's consider the edges values <span class="maths katex-rendered">i</mi>=</mo>0</mn>,</mo>i</mi>=</mo>m</mi>,</mo>j</mi>=</mo>0</mn>,</mo>j</mi>=</mo>n</mi></mrow><annotation encoding="application/x-tex">i=0,i=m,j=0,j=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span>=</span><span class="mord mathrm">0</span>,</span><span class="mord mathit">i</span>=</span><span class="mord mathit">m</span>,</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>=</span><span class="mord mathrm">0</span>,</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>=</span><span class="mord mathit">n</span></span></span></span></span> where <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>,</mo>B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>,</mo>A</mi></mtext>[</mo>i</mi>]</mo>,</mo>B</mi></mtext>[</mo>j</mi>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i-1],text{B}[j-1],text{A}[i],text{B}[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span></span></span></span></span> may not exist.
Actually this situation is easier than you think.</p>
What we need to do is ensuring that <span class="maths katex-rendered">m</mi>a</mi>x</mi></mtext>(</mo>l</mi>e</mi>f</mi>t</mi></mtext>_</mi>p</mi>a</mi>r</mi>t</mi></mtext>)</mo>≤</mo>m</mi>i</mi>n</mi></mtext>(</mo>r</mi>i</mi>g</mi>h</mi>t</mi></mtext>_</mi>p</mi>a</mi>r</mi>t</mi></mtext>)</mo></mrow><annotation encoding="application/x-tex">text{max}(text{left}_text{part}) leq text{min}(text{right}_text{part})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1.06em; vertical-align: -0.31em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">max</span></span>(</span><span class="mord text textstyle uncramped"><span class="mord mathrm">left</span></span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord text textstyle uncramped"><span class="mord mathrm">part</span></span>)</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">min</span></span>(</span><span class="mord text textstyle uncramped"><span class="mord mathrm">right</span></span><span class="mord mathrm" style="margin-right: 0.02778em;">_</span><span class="mord text textstyle uncramped"><span class="mord mathrm">part</span></span>)</span></span></span></span></span>. So, if <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span> and <span class="maths katex-rendered">j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span></span></span></span></span> are not edges values (means <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>,</mo>B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>,</mo>A</mi></mtext>[</mo>i</mi>]</mo>,</mo>B</mi></mtext>[</mo>j</mi>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i-1],
text{B}[j-1],text{A}[i],text{B}[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span></span></span></span></span> all exist), then we must check both <span class="maths katex-rendered">B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>≤</mo>A</mi></mtext>[</mo>i</mi>]</mo></mrow><annotation encoding="application/x-tex">text{B}[j-1] leq text{A}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span></span></span></span></span> and <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>≤</mo>B</mi></mtext>[</mo>j</mi>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i-1] leq text{B}[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span></span></span></span></span>.
But if some of <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>,</mo>B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>,</mo>A</mi></mtext>[</mo>i</mi>]</mo>,</mo>B</mi></mtext>[</mo>j</mi>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i-1],text{B}[j-1],text{A}[i],text{B}[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span>,</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span></span></span></span></span> don't exist, then we don't need to check one (or both) of these two conditions.
For example, if <span class="maths katex-rendered">i</mi>=</mo>0</mn></mrow><annotation encoding="application/x-tex">i=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span>=</span><span class="mord mathrm">0</span></span></span></span></span>, then <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span></span></span></span></span> doesn't exist, then we don't need to check <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>≤</mo>B</mi></mtext>[</mo>j</mi>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i-1] leq text{B}[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span></span></span></span></span>.
So, what we need to do is:</p>

Searching <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span> in <span class="maths katex-rendered">[</mo>0</mn>,</mo>m</mi>]</mo></mrow><annotation encoding="application/x-tex">[0, m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">[</span><span class="mord mathrm">0</span>,</span><span class="mord mathit">m</span>]</span></span></span></span></span>, to find an object <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span> such that:</p>

<span class="maths katex-rendered">(</mo>j</mi>=</mo>0</mn></mrow><annotation encoding="application/x-tex">(j = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>=</span><span class="mord mathrm">0</span></span></span></span></span> or <span class="maths katex-rendered">i</mi>=</mo>m</mi></mrow><annotation encoding="application/x-tex">i = m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span>=</span><span class="mord mathit">m</span></span></span></span></span> or <span class="maths katex-rendered">B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>≤</mo>A</mi></mtext>[</mo>i</mi>]</mo>)</mo></mrow><annotation encoding="application/x-tex">text{B}[j-1] leq text{A}[i])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span>)</span></span></span></span></span> and
<span class="maths katex-rendered">(</mo>i</mi>=</mo>0</mn></mrow><annotation encoding="application/x-tex">(i = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathit">i</span>=</span><span class="mord mathrm">0</span></span></span></span></span> or <span class="maths katex-rendered">j</mi>=</mo>n</mi></mrow><annotation encoding="application/x-tex">j = n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span>=</span><span class="mord mathit">n</span></span></span></span></span> or <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>≤</mo>B</mi></mtext>[</mo>j</mi>]</mo>)</mo>,</mo></mrow><annotation encoding="application/x-tex">text{A}[i-1] leq text{B}[j]),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span>)</span>,</span></span></span></span></span>  where <span class="maths katex-rendered">j</mi>=</mo>m</mi>+</mo>n</mi>+</mo>1</mn></mrow>2</mn></mrow></mfrac>−</mo>i</mi></mrow><annotation encoding="application/x-tex">j = frac{m + n + 1}{2} - i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.845108em;"></span><span class="strut bottom" style="height: 1.19011em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span>=</span><span class="mord reset-textstyle textstyle uncramped"><span class="mopen sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped mtight"><span class="mord scriptstyle cramped mtight"><span class="mord mathrm mtight">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped mtight"><span class="mord scriptstyle uncramped mtight"><span class="mord mathit mtight">m</span><span class="mbin mtight">+</span><span class="mord mathit mtight">n</span><span class="mbin mtight">+</span><span class="mord mathrm mtight">1</span></span></span></span><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span>−</span><span class="mord mathit">i</span></span></span></span></span>
</p>
</blockquote>
And in a searching loop, we will encounter only three situations:</p>



<span class="maths katex-rendered">(</mo>j</mi>=</mo>0</mn></mrow><annotation encoding="application/x-tex">(j = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>=</span><span class="mord mathrm">0</span></span></span></span></span> or <span class="maths katex-rendered">i</mi>=</mo>m</mi></mrow><annotation encoding="application/x-tex">i = m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span>=</span><span class="mord mathit">m</span></span></span></span></span> or <span class="maths katex-rendered">B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>≤</mo>A</mi></mtext>[</mo>i</mi>]</mo>)</mo></mrow><annotation encoding="application/x-tex">text{B}[j-1] leq text{A}[i])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span>)</span></span></span></span></span> and
<span class="maths katex-rendered">(</mo>i</mi>=</mo>0</mn></mrow><annotation encoding="application/x-tex">(i = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">(</span><span class="mord mathit">i</span>=</span><span class="mord mathrm">0</span></span></span></span></span> or <span class="maths katex-rendered">j</mi>=</mo>n</mi></mrow><annotation encoding="application/x-tex">j = n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span>=</span><span class="mord mathit">n</span></span></span></span></span> or <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>≤</mo>B</mi></mtext>[</mo>j</mi>]</mo>)</mo></mrow><annotation encoding="application/x-tex">text{A}[i-1] leq text{B}[j])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>≤</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span>)</span></span></span></span></span>

    Means <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span> is perfect, we can stop searching.</li>

<span class="maths katex-rendered">j</mi>&gt;</mo>0</mn></mrow><annotation encoding="application/x-tex">j &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span>&gt;</span><span class="mord mathrm">0</span></span></span></span></span> and <span class="maths katex-rendered">i</mi>&lt;</mo>m</mi></mrow><annotation encoding="application/x-tex">i &lt; m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.69862em; vertical-align: -0.0391em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span>&lt;</span><span class="mord mathit">m</span></span></span></span></span> and <span class="maths katex-rendered">B</mi></mtext>[</mo>j</mi>−</mo>1</mn>]</mo>&gt;</mo>A</mi></mtext>[</mo>i</mi>]</mo></mrow><annotation encoding="application/x-tex">text{B}[j - 1] &gt; text{A}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>−</span><span class="mord mathrm">1</span>]</span>&gt;</span><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>]</span></span></span></span></span>

    Means <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span> is too small, we must increase it.</li>

<span class="maths katex-rendered">i</mi>&gt;</mo>0</mn></mrow><annotation encoding="application/x-tex">i &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.69862em; vertical-align: -0.0391em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span>&gt;</span><span class="mord mathrm">0</span></span></span></span></span> and <span class="maths katex-rendered">j</mi>&lt;</mo>n</mi></mrow><annotation encoding="application/x-tex">j &lt; n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span>&lt;</span><span class="mord mathit">n</span></span></span></span></span> and <span class="maths katex-rendered">A</mi></mtext>[</mo>i</mi>−</mo>1</mn>]</mo>&gt;</mo>B</mi></mtext>[</mo>j</mi>]</mo></mrow><annotation encoding="application/x-tex">text{A}[i - 1] &gt; text{B}[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord text textstyle uncramped"><span class="mord mathrm">A</span></span>[</span><span class="mord mathit">i</span>−</span><span class="mord mathrm">1</span>]</span>&gt;</span><span class="mord text textstyle uncramped"><span class="mord mathrm">B</span></span>[</span><span class="mord mathit" style="margin-right: 0.05724em;">j</span>]</span></span></span></span></span>

    Means <span class="maths katex-rendered">i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.65952em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span></span></span></span></span> is too big, we must decrease it.</li>
</ol>
</blockquote>
Thanks to <a href="https://leetcode.com/Quentin.chen">@Quentin.chen</a> for pointing out that: <span class="maths katex-rendered">(i &lt; m implies j &gt; 0)</span> and <span class="maths katex-rendered">(i &gt; 0 implies j &lt; n)</span>. Because:</p>


<span class="maths katex-rendered">(m leq n,  i &lt; m implies j = frac{m+n+1}{2} - i &gt; frac{m+n+1}{2} - m geq frac{2m+1}{2} - m geq 0)</span>
</p>

<span class="maths katex-rendered">(m leq n,  i &gt; 0 implies j = frac{m+n+1}{2} - i &lt; frac{m+n+1}{2} leq frac{2n+1}{2} leq n)</span>
</p>
</blockquote>
So in situation 2. and 3. , we don't need to check whether <span class="maths katex-rendered">j</mi>&gt;</mo>0</mn></mrow><annotation encoding="application/x-tex">j &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span>&gt;</span><span class="mord mathrm">0</span></span></span></span></span> and whether <span class="maths katex-rendered">j</mi>&lt;</mo>n</mi></mrow><annotation encoding="application/x-tex">j &lt; n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.65952em;"></span><span class="strut bottom" style="height: 0.85396em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.05724em;">j</span>&lt;</span><span class="mord mathit">n</span></span></span></span></span>.</p>
Java</strong></p>
</span>class</span> Solution</span> {</span>
    public</span> double</span> findMedianSortedArrays</span>(</span>int</span>[]</span> A</span>,</span> int</span>[]</span> B</span>)</span> {</span>
        int</span> m</span> =</span> A</span>.</span>length</span>;</span>
        int</span> n</span> =</span> B</span>.</span>length</span>;</span>
        if</span> (</span>m</span> &gt;</span> n</span>)</span> {</span> // to ensure m&lt;=n</span>
            int</span>[]</span> temp</span> =</span> A</span>;</span> A</span> =</span> B</span>;</span> B</span> =</span> temp</span>;</span>
            int</span> tmp</span> =</span> m</span>;</span> m</span> =</span> n</span>;</span> n</span> =</span> tmp</span>;</span>
        }</span>
        int</span> iMin</span> =</span> 0</span>,</span> iMax</span> =</span> m</span>,</span> halfLen</span> =</span> (</span>m</span> +</span> n</span> +</span> 1</span>)</span> /</span> 2</span>;</span>
        while</span> (</span>iMin</span> &lt;=</span> iMax</span>)</span> {</span>
            int</span> i</span> =</span> (</span>iMin</span> +</span> iMax</span>)</span> /</span> 2</span>;</span>
            int</span> j</span> =</span> halfLen</span> -</span> i</span>;</span>
            if</span> (</span>i</span> &lt;</span> iMax</span> &amp;&amp;</span> B</span>[</span>j</span>-</span>1</span>]</span> &gt;</span> A</span>[</span>i</span>]){</span>
                iMin</span> =</span> iMin</span> +</span> 1</span>;</span> // i is too small</span>
            }</span>
            else</span> if</span> (</span>i</span> &gt;</span> iMin</span> &amp;&amp;</span> A</span>[</span>i</span>-</span>1</span>]</span> &gt;</span> B</span>[</span>j</span>])</span> {</span>
                iMax</span> =</span> iMax</span> -</span> 1</span>;</span> // i is too big</span>
            }</span>
            else</span> {</span> // i is perfect</span>
                int</span> maxLeft</span> =</span> 0</span>;</span>
                if</span> (</span>i</span> ==</span> 0</span>)</span> {</span> maxLeft</span> =</span> B</span>[</span>j</span>-</span>1</span>];</span> }</span>
                else</span> if</span> (</span>j</span> ==</span> 0</span>)</span> {</span> maxLeft</span> =</span> A</span>[</span>i</span>-</span>1</span>];</span> }</span>
                else</span> {</span> maxLeft</span> =</span> Math</span>.</span>max</span>(</span>A</span>[</span>i</span>-</span>1</span>],</span> B</span>[</span>j</span>-</span>1</span>]);</span> }</span>
                if</span> (</span> (</span>m</span> +</span> n</span>)</span> %</span> 2</span> ==</span> 1</span> )</span> {</span> return</span> maxLeft</span>;</span> }</span>

                int</span> minRight</span> =</span> 0</span>;</span>
                if</span> (</span>i</span> ==</span> m</span>)</span> {</span> minRight</span> =</span> B</span>[</span>j</span>];</span> }</span>
                else</span> if</span> (</span>j</span> ==</span> n</span>)</span> {</span> minRight</span> =</span> A</span>[</span>i</span>];</span> }</span>
                else</span> {</span> minRight</span> =</span> Math</span>.</span>min</span>(</span>B</span>[</span>j</span>],</span> A</span>[</span>i</span>]);</span> }</span>

                return</span> (</span>maxLeft</span> +</span> minRight</span>)</span> /</span> 2.0</span>;</span>
            }</span>
        }</span>
        return</span> 0.0</span>;</span>
    }</span>
}</span>
</pre></div>


Python</strong></p>
</span>def</span> median</span>(</span>A</span>,</span> B</span>):</span>
    m</span>,</span> n</span> =</span> len</span>(</span>A</span>),</span> len</span>(</span>B</span>)</span>
    if</span> m</span> &gt;</span> n</span>:</span>
        A</span>,</span> B</span>,</span> m</span>,</span> n</span> =</span> B</span>,</span> A</span>,</span> n</span>,</span> m</span>
    if</span> n</span> ==</span> 0</span>:</span>
        raise</span> ValueError</span>

    imin</span>,</span> imax</span>,</span> half_len</span> =</span> 0</span>,</span> m</span>,</span> (</span>m</span> +</span> n</span> +</span> 1</span>)</span> /</span> 2</span>
    while</span> imin</span> &lt;=</span> imax</span>:</span>
        i</span> =</span> (</span>imin</span> +</span> imax</span>)</span> /</span> 2</span>
        j</span> =</span> half_len</span> -</span> i</span>
        if</span> i</span> &lt;</span> m</span> and</span> B</span>[</span>j</span>-</span>1</span>]</span> &gt;</span> A</span>[</span>i</span>]:</span>
            # i is too small, must increase it</span>
            imin</span> =</span> i</span> +</span> 1</span>
        elif</span> i</span> &gt;</span> 0</span> and</span> A</span>[</span>i</span>-</span>1</span>]</span> &gt;</span> B</span>[</span>j</span>]:</span>
            # i is too big, must decrease it</span>
            imax</span> =</span> i</span> -</span> 1</span>
        else</span>:</span>
            # i is perfect</span>

            if</span> i</span> ==</span> 0</span>:</span> max_of_left</span> =</span> B</span>[</span>j</span>-</span>1</span>]</span>
            elif</span> j</span> ==</span> 0</span>:</span> max_of_left</span> =</span> A</span>[</span>i</span>-</span>1</span>]</span>
            else</span>:</span> max_of_left</span> =</span> max</span>(</span>A</span>[</span>i</span>-</span>1</span>],</span> B</span>[</span>j</span>-</span>1</span>])</span>

            if</span> (</span>m</span> +</span> n</span>)</span> %</span> 2</span> ==</span> 1</span>:</span>
                return</span> max_of_left</span>

            if</span> i</span> ==</span> m</span>:</span> min_of_right</span> =</span> B</span>[</span>j</span>]</span>
            elif</span> j</span> ==</span> n</span>:</span> min_of_right</span> =</span> A</span>[</span>i</span>]</span>
            else</span>:</span> min_of_right</span> =</span> min</span>(</span>A</span>[</span>i</span>],</span> B</span>[</span>j</span>])</span>

            return</span> (</span>max_of_left</span> +</span> min_of_right</span>)</span> /</span> 2.0</span>
</pre></div>


Complexity Analysis</strong></p>


Time complexity: <span class="maths katex-rendered">O</mi>(</mo>log</mi>(</mo>m</mi>i</mi>n</mi></mtext>(</mo>m</mi>,</mo>n</mi>)</mo>)</mo>)</mo></mrow><annotation encoding="application/x-tex">Obig(logbig(text{min}(m,n)big)big)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.85em;"></span><span class="strut bottom" style="height: 1.20001em; vertical-align: -0.35001em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span>lo<span style="margin-right: 0.01389em;">g</span></span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span><span class="mord text textstyle uncramped"><span class="mord mathrm">min</span></span>(</span><span class="mord mathit">m</span>,</span><span class="mord mathit">n</span>)</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span></span></span></span></span>.
At first, the searching range is <span class="maths katex-rendered">[</mo>0</mn>,</mo>m</mi>]</mo></mrow><annotation encoding="application/x-tex">[0, m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">[</span><span class="mord mathrm">0</span>,</span><span class="mord mathit">m</span>]</span></span></span></span></span>.
And the length of this searching range will be reduced by half after each loop.
So, we only need <span class="maths katex-rendered">log</mi>(</mo>m</mi>)</mo></mrow><annotation encoding="application/x-tex">log(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped">lo<span style="margin-right: 0.01389em;">g</span></span>(</span><span class="mord mathit">m</span>)</span></span></span></span></span> loops. Since we do constant operations in each loop, so the time complexity is <span class="maths katex-rendered">O</mi>(</mo>log</mi>(</mo>m</mi>)</mo>)</mo></mrow><annotation encoding="application/x-tex">Obig(log(m)big)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.85em;"></span><span class="strut bottom" style="height: 1.20001em; vertical-align: -0.35001em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span>lo<span style="margin-right: 0.01389em;">g</span></span>(</span><span class="mord mathit">m</span>)</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span></span></span></span></span>.
Since <span class="maths katex-rendered">m</mi>≤</mo>n</mi></mrow><annotation encoding="application/x-tex">m leq n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.63597em;"></span><span class="strut bottom" style="height: 0.77194em; vertical-align: -0.13597em;"></span><span class="base textstyle uncramped"><span class="mord mathit">m</span>≤</span><span class="mord mathit">n</span></span></span></span></span>, so the time complexity is <span class="maths katex-rendered">O</mi>(</mo>log</mi>(</mo>m</mi>i</mi>n</mi></mtext>(</mo>m</mi>,</mo>n</mi>)</mo>)</mo>)</mo></mrow><annotation encoding="application/x-tex">Obig(logbig(text{min}(m,n)big)big)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.85em;"></span><span class="strut bottom" style="height: 1.20001em; vertical-align: -0.35001em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span>lo<span style="margin-right: 0.01389em;">g</span></span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span><span class="mord text textstyle uncramped"><span class="mord mathrm">min</span></span>(</span><span class="mord mathit">m</span>,</span><span class="mord mathit">n</span>)</span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span><span class="mord style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span></span></span></span></span>.</p>
</li>

Space complexity: <span class="maths katex-rendered">O</mi>(</mo>1</mn>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathrm">1</span>)</span></span></span></span></span>.
We only need constant memory to store <span class="maths katex-rendered">9</mn></mrow><annotation encoding="application/x-tex">9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">9</span></span></span></span></span> local variables, so the space complexity is <span class="maths katex-rendered">O</mi>(</mo>1</mn>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span>(</span><span class="mord mathrm">1</span>)</span></span></span></span></span>.</p>
</li>
</ul>

Analysis written by: <a href="https://leetcode.com/MissMary">@MissMary</a></p>